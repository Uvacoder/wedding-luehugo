{"version":3,"sources":["webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curry2.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curry1.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curry3.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_dispatchable.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfBase.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_has.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/map.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/equals.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_concat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_arity.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/keys.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isArray.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/slice.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_contains.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/always.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/max.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pluck.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_checkForMethod.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/nth.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/invoker.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/path.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isPlaceholder.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/add.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_map.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isArrayLike.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/assoc.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/nAry.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isFunction.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lift.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/curry.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reverse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reject.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_containsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/flip.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lens.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepWithKey.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ptz-fp/dist/index.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isTransformer.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/prop.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/ap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isInteger.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/chain.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/type.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/compose.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/tail.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/concat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/filter.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_filter.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isObject.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/update.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/take.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/identity.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_identity.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uniq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uniqWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_assign.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeWithKey.js","webpack:///./node_modules/ptz-fp/dist/isNilOrEmpty.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/index.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/adjust.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xwrap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/bind.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isArguments.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/and.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/any.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xany.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/apply.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/values.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/assocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/isNil.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/liftN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_makeFlat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_clone.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_cloneRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/not.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/composeK.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/identical.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_complement.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/constructN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/converge.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/defaultTo.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/difference.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/differenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dissoc.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/remove.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/drop.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/last.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/or.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/empty.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/takeLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uniqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/objOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/is.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/juxt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/length.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isNumber.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mean.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sum.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/memoizeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/multiply.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/over.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_createPartialApplicator.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pickAll.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/prepend.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/useWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduceRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/times.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sequence.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/where.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/F.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/T.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/__.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/addIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/all.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xall.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/allPass.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xmap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/anyPass.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xaperture.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/append.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/applySpec.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/ascend.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/binary.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/both.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/call.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xchain.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_flatCat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_forceReduced.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/clamp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/clone.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/comparator.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/complement.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/composeP.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_toString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_equals.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_arrayFromIterator.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_functionName.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_quote.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_toISOString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfilter.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/cond.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/construct.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/contains.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/countBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xreduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dec.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/descend.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dissocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/divide.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdrop.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xtake.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropRepeats.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/either.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/endsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/eqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/eqProps.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/evolve.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/find.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfind.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/findIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfindIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/findLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfindLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/findLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfindLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/flatten.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/forEach.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/forEachObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/fromPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/groupBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/groupWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/gt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/gte.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/has.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/hasIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/head.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/ifElse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/inc.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/indexBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/init.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/innerJoin.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/insert.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/insertAll.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/intersection.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_Set.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/intersectionWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/intersperse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/into.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_stepCat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_objectAssign.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/invert.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/invertObj.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/isEmpty.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/join.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/keysIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lastIndexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lensIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lensPath.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lensProp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lte.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mapAccum.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mapAccumRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mapObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/match.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mathMod.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/maxBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/median.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/memoize.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/merge.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeAll.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepLeft.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/min.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/minBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/modulo.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/negate.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/none.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/nthArg.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/o.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/of.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_of.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/omit.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/once.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pair.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/partial.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/partialRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/partition.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pathEq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pathOr.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pathSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pick.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pickBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pipeK.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/product.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/project.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propEq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propIs.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propOr.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/props.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/range.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduceWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/repeat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/replace.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/scan.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/set.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sort.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sortBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sortWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/split.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/splitAt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/splitEvery.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/splitWhen.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/startsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/subtract.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/symmetricDifference.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/symmetricDifferenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/takeLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/takeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xtakeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/tap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/test.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toLower.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toPairsIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toUpper.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/transduce.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/transpose.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/traverse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/trim.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/tryCatch.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unapply.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unary.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uncurryN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unfold.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/union.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unionWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unless.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unnest.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/until.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/valuesIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/view.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/when.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/whereEq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/without.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/xprod.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/zip.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/zipObj.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/zipWith.js","webpack:///./node_modules/ptz-fp/dist/isNotNilOrEmpty.js","webpack:///./node_modules/ptz-fp/dist/log.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/dist/index.js","webpack:///./node_modules/json-stringify-safe/stringify.js","webpack:///./node_modules/moment/moment.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/always.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/F.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/T.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/__.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/add.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/addIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/adjust.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xall.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/all.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/max.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/bind.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/keys.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/map.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/path.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/prop.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pluck.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/allPass.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/and.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xany.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/any.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/anyPass.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/ap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/append.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/apply.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/values.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/applySpec.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/applyTo.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/ascend.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/assoc.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/isNil.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/nAry.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/binary.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/liftN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lift.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/both.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/curry.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/call.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_makeFlat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_flatCat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_forceReduced.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/chain.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xchain.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/clamp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_cloneRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/type.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_clone.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/clone.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/comparator.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/not.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/complement.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/slice.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/tail.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reverse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/compose.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/composeK.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/composeP.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/identical.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/equals.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/filter.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reject.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/concat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/cond.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/constructN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/construct.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/contains.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/converge.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/countBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dec.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/defaultTo.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/descend.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/difference.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/differenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dissoc.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/remove.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/update.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dissocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/divide.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdrop.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/drop.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xtake.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/take.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/nth.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/last.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropRepeats.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/or.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/either.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/empty.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/takeLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/endsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/eqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/eqProps.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/evolve.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfind.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/find.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/findIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfindLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/findLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/findLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/flatten.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/flip.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/forEach.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/forEachObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/fromPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/groupBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/groupWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/gt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/gte.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/has.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/hasIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/head.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/identity.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/ifElse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/inc.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/indexBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/init.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/innerJoin.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/insert.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/insertAll.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_Set.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uniqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uniq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/intersection.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/intersperse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/objOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/into.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/invert.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/invertObj.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/invoker.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/is.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/isEmpty.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/join.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/juxt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/keysIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lastIndexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isNumber.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/length.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lens.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lensIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lensPath.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lensProp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lte.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mapAccum.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mapAccumRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mapObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/match.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mathMod.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/maxBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sum.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mean.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/median.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/memoizeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/memoize.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/merge.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeAll.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeWithKey.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepWithKey.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepLeft.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/min.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/minBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/modulo.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/multiply.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/negate.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/none.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/nthArg.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/o.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_of.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/of.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/omit.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/once.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/over.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pair.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_createPartialApplicator.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/partial.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/partialRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/partition.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pathEq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pathOr.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pathSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pick.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pickAll.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pickBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pipeK.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/prepend.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/product.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/useWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/project.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propEq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propIs.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propOr.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/props.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/range.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduceRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduceWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/times.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/repeat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/replace.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/scan.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sequence.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/set.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sort.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sortBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sortWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/split.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/splitAt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/splitEvery.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/splitWhen.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/startsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/subtract.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/symmetricDifference.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/symmetricDifferenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/takeLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xtakeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/takeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xtap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/tap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/test.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toLower.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toPairsIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toUpper.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/transduce.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/transpose.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/traverse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/trim.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/tryCatch.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unapply.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unary.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uncurryN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unfold.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/union.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uniqWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unionWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unless.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unnest.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/until.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/valuesIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/view.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/when.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/where.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/whereEq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/without.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/xprod.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/zip.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/zipObj.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/zipWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/index.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/assoc.js","webpack:///./node_modules/ramda/es/isNil.js","webpack:///./node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ramda/es/curryN.js","webpack:///./node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ramda/es/curry.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/prop.js"],"names":["_curry1","__webpack_require__","_isPlaceholder","module","exports","fn","f2","a","b","arguments","length","_b","_a","f1","apply","this","_curry2","f3","c","_c","_isArray","_isTransformer","methodNames","xf","args","Array","prototype","slice","call","obj","pop","idx","transducer","init","result","_arity","_curryN","prop","Object","hasOwnProperty","_dispatchable","_map","_reduce","_xmap","curryN","keys","functor","toString","acc","key","_isArrayLike","_xwrap","bind","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","list","len","_arrayReduce","reduce","TypeError","_equals","set1","set2","len1","len2","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","_has","_isArguments","propertyIsEnumerable","item","nIdx","ks","checkArgsLength","_curry3","isArray","val","x","@@transducer/value","@@transducer/reduced","_checkForMethod","fromIndex","toIndex","_indexOf","map","p","methodname","_toString","_isString","offset","charAt","_isFunction","arity","method","target","paths","Number","received","combined","argsIdx","left","combinedIdx","nodeType","liftN","split","reverse","join","_complement","filter","pred","filterable","_xreduceBy","valueFn","valueAcc","keyFn","elt","curry","getter","setter","toFunctorFn","focus","_isObject","mergeWithKey","mergeDeepWithKey","lObj","rObj","k","lVal","rVal","d","__webpack_exports__","defineProperty","_isNilOrEmpty","forEach","enumerable","get","_isNotNilOrEmpty","_log","_concat","applyF","applyX","ap","f","isInteger","_makeFlat","_xchain","monad","undefined","pipe","Infinity","concat","_filter","_xfilter","adjust","always","_xtake","xs","_identity","identity","uniqBy","_containsWith","_objectAssign","assign","l","r","isNilOrEmpty","_ramda","_ramda2","__esModule","default","anyPass","isNil","isEmpty","F","T","__","add","addIndex","all","allPass","and","any","aperture","append","applySpec","ascend","assoc","assocPath","binary","both","chain","clamp","clone","comparator","complement","compose","composeK","composeP","cond","construct","constructN","converge","countBy","dec","defaultTo","descend","difference","differenceWith","dissoc","dissocPath","divide","drop","dropLast","dropLastWhile","dropRepeats","dropRepeatsWith","dropWhile","either","empty","endsWith","eqBy","eqProps","equals","evolve","find","findIndex","findLast","findLastIndex","flatten","flip","forEachObjIndexed","fromPairs","groupBy","groupWith","gt","gte","has","hasIn","head","identical","ifElse","inc","indexBy","indexOf","innerJoin","insert","insertAll","intersection","intersectionWith","intersperse","into","invert","invertObj","invoker","is","juxt","keysIn","last","lastIndexOf","lens","lensIndex","lensPath","lensProp","lift","lt","lte","mapAccum","mapAccumRight","mapObjIndexed","match","mathMod","max","maxBy","mean","median","memoize","memoizeWith","merge","mergeAll","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","min","minBy","modulo","multiply","nAry","negate","none","not","nth","nthArg","o","objOf","of","omit","once","or","over","pair","partial","partialRight","partition","path","pathEq","pathOr","pathSatisfies","pick","pickAll","pickBy","pipeK","pipeP","pluck","prepend","product","project","propEq","propIs","propOr","propSatisfies","props","range","reduceBy","reduceRight","reduceWhile","reduced","reject","remove","repeat","replace","scan","sequence","set","sort","sortBy","sortWith","splitAt","splitEvery","splitWhen","startsWith","subtract","sum","symmetricDifference","symmetricDifferenceWith","tail","take","takeLast","takeLastWhile","takeWhile","tap","test","times","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","traverse","trim","tryCatch","type","unapply","unary","uncurryN","unfold","union","unionWith","uniq","uniqWith","unless","unnest","until","update","useWith","values","valuesIn","view","when","where","whereEq","without","xprod","zip","zipObj","zipWith","_idx","_list","XWrap","thisObj","_xany","_reduced","_xfBase","XAny","input","vals","_isInteger","nextObj","arr","lifted","recursive","flatt","jlen","j","ilen","_cloneRegExp","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_pipe","_pipeP","inf","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","after","fns","context","v","_contains","first","second","out","firstLen","push","start","count","splice","_xdrop","Math","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropRepeatsWith","constructor","_Set","appliedItem","Ctor","_isNumber","NaN","mFn","cache","Identity","y","names","name","el","transformers","isNaN","RangeError","traversable","spec","testObj","@@functional/placeholder","origFn","_xall","XAll","preds","XMap","_aperture","_xaperture","limit","XAperture","pos","full","store","getCopy","aa","bb","g","_flatCat","_forceReduced","rxf","@@transducer/init","@@transducer/result","@@transducer/step","ret","preservingReduced","ctx","then","_quote","_toISOString","seen","recur","mapPairs","repr","_arrayFromIterator","_functionName","stackA","stackB","message","entries","keysA","String","s","pad","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","XFilter","pairs","elem","XReduceBy","inputs","XDrop","_dropLast","_xdropLast","XTake","i","XDropLast","_dropLastWhile","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_xdropWhile","XDropWhile","suffix","obj1","obj2","transformations","object","transformation","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","_xfindLastIndex","XFindLastIndex","lastIdx","keyList","res","nextidx","condition","onTrue","onFalse","ys","elts","list1","list2","lookupList","filteredList","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","size","bIdx","results","separator","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","_assign","output","nextKey","tuple","rx","str","m","width","_","_l","_r","_of","called","fst","snd","_createPartialApplicator","_path","propPath","ps","from","to","regex","replacement","index","array","prefix","_xtakeWhile","XTakeWhile","_isRegExp","outerlist","innerlist","ws","beginRx","endRx","tryer","catcher","e","depth","endIdx","currentDepth","seed","whenFalseFn","vs","Const","fantasy-land/map","whenTrueFn","rv","isNotNilOrEmpty","log","_ptzLog","_len","_key","logInOut","_jsonStringifySafe2","_interopRequireDefault","_moment2","logColors","reset","bright","dim","underscore","blink","hidden","black","red","green","yellow","blue","magenta","cyan","white","render","txt","arg","ptzLogColor","console","format","flog","_len2","_key2","serializer","replacer","cycleReplacer","stack","thisPos","spaces","JSON","stringify","getSerialize","hookCallback","some","hooks","isObject","isUndefined","isNumber","isDate","hasOwnProp","extend","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","t","momentProperties","copyConfig","_isAMomentObject","_i","_f","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","absFloor","number","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","mom","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","parseTwoDigitYear","parseInt","getSetYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","data","getLocale","defineLocale","abbr","_config","parentLocale","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","meridiemHour","isPm","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","other","prototypeMax","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","diffRes","base","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","monthDiff","anchor2","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","keepOffset","inspect","zone","isLocal","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","webpackPolyfill","children","es_always","es_F","es_T","es_add","es_curryN","es_addIndex","es_adjust","_xall_XAll","es_all","es_max","internal_isArrayLike","es_bind","_xmap_XMap","internal_xmap","_isArguments_toString","internal_isArguments","es_keys","es_map","es_path","es_prop","es_pluck","es_reduce","es_allPass","es_and","_xany_XAny","internal_xany","es_any","es_anyPass","es_ap","_xaperture_XAperture","es_aperture","es_append","es_apply","es_values","es_applySpec","es_applyTo","es_ascend","es_assoc","es_isNil","es_assocPath","es_nAry","es_binary","es_liftN","es_lift","es_both","es_curry","es_call","internal_flatCat","es_chain","es_clamp","es_type","es_clone","es_comparator","es_not","es_complement","es_slice","es_tail","es_reverse","es_identical","_uniqContentEquals","aIterator","bIterator","eq","aItem","typeA","extendedStackA","extendedStackB","es_equals","internal_toISOString","_xfilter_XFilter","es_filter","es_reject","es_toString","es_concat","es_cond","es_constructN","es_construct","es_contains","es_converge","_xreduceBy_XReduceBy","es_reduceBy","es_countBy","es_dec","es_defaultTo","es_descend","es_difference","es_differenceWith","es_dissoc","es_remove","es_update","es_dissocPath","es_divide","_xdrop_XDrop","es_drop","_xtake_XTake","es_take","_xdropLast_XDropLast","es_dropLast","_xdropLastWhile_XDropLastWhile","es_dropLastWhile","_xdropRepeatsWith_XDropRepeatsWith","internal_xdropRepeatsWith","es_nth","es_last","es_dropRepeatsWith","es_dropRepeats","_xdropWhile_XDropWhile","es_dropWhile","es_or","es_either","es_empty","es_takeLast","es_endsWith","es_eqBy","es_eqProps","es_evolve","_xfind_XFind","es_find","_xfindIndex_XFindIndex","es_findIndex","_xfindLast_XFindLast","es_findLast","_xfindLastIndex_XFindLastIndex","es_findLastIndex","es_flatten","es_flip","es_forEach","es_forEachObjIndexed","es_fromPairs","es_groupBy","es_groupWith","es_gt","es_gte","es_has","es_hasIn","es_head","es_identity","es_ifElse","es_inc","es_indexBy","es_indexOf","es_init","es_innerJoin","es_insert","es_insertAll","internal_Set","es_uniqBy","es_uniq","es_intersection","es_intersperse","es_objOf","es_into","es_invert","es_invertObj","es_invoker","es_is","es_isEmpty","es_join","es_juxt","es_keysIn","es_lastIndexOf","es_length","es_lens","es_lensIndex","es_lensPath","es_lensProp","es_lt","es_lte","es_mapAccum","es_mapAccumRight","es_mapObjIndexed","es_match","es_mathMod","es_maxBy","es_sum","es_mean","es_median","es_memoizeWith","es_memoize","es_merge","es_mergeAll","es_mergeWithKey","es_mergeDeepWithKey","es_mergeDeepLeft","es_mergeDeepRight","es_mergeDeepWith","es_mergeWith","es_min","es_minBy","es_modulo","es_multiply","es_negate","es_none","es_nthArg","es_o","es_of","es_omit","es_once","es_over","es_pair","es_partial","es_partialRight","es_partition","es_pathEq","es_pathOr","es_pathSatisfies","es_pick","es_pickAll","es_pickBy","es_prepend","es_product","es_useWith","es_project","es_propEq","es_propIs","es_propOr","es_propSatisfies","es_props","es_range","es_reduceRight","es_reduceWhile","es_reduced","es_times","es_repeat","es_replace","es_scan","es_sequence","es_set","es_sort","es_sortBy","es_sortWith","es_split","es_splitAt","es_splitEvery","es_splitWhen","es_startsWith","es_subtract","es_symmetricDifference","es_symmetricDifferenceWith","es_takeLastWhile","_xtakeWhile_XTakeWhile","es_takeWhile","_xtap_XTap","XTap","es_tap","es_test","es_toLower","es_toPairs","es_toPairsIn","es_toUpper","es_transduce","es_transpose","es_traverse","es_trim","es_tryCatch","es_unapply","es_unary","es_uncurryN","es_unfold","es_union","es_uniqWith","es_unionWith","es_unless","es_unnest","es_until","es_valuesIn","es_view","es_when","es_where","es_whereEq","es_without","es_xprod","es_zip","es_zipObj","es_zipWith","assocPath_assocPath","curry_curry","prop_prop"],"mappings":"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","file":"3-d20540a4fd49b5050e0b.js","sourcesContent":["var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n","var _isArrayLike = require('./_isArrayLike');\nvar _xwrap = require('./_xwrap');\nvar bind = require('../bind');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (_isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _equals = require('./internal/_equals');\n\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n","var _indexOf = require('./_indexOf');\n\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\nvar prop = require('./prop');\n\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n","var _isArray = require('./_isArray');\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n","var _curry1 = require('./internal/_curry1');\nvar _toString = require('./internal/_toString');\n\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n","var _curry2 = require('./internal/_curry2');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar curryN = require('./curryN');\nvar toString = require('./toString');\n\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function() {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nmodule.exports = _curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\n","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n","var _curry1 = require('./_curry1');\nvar _isArray = require('./_isArray');\nvar _isString = require('./_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nmodule.exports = _curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0: return function() {return fn.call(this);};\n    case 1: return function(a0) {return fn.call(this, a0);};\n    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};\n    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};\n    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};\n    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};\n    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n","module.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar liftN = require('./liftN');\n\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n","var _curry1 = require('./internal/_curry1');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar filter = require('./filter');\n\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n","var _curryN = require('./internal/_curryN');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _has = require('./internal/_has');\nvar _reduce = require('./internal/_reduce');\nvar _xreduceBy = require('./internal/_xreduceBy');\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n","module.exports = function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n","var _curry1 = require('./internal/_curry1');\nvar curry = require('./curry');\n\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nmodule.exports = _curry1(function flip(fn) {\n  return curry(function(a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n","var _curry3 = require('./internal/_curry3');\nvar _isObject = require('./internal/_isObject');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nmodule.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function(k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNilOrEmpty = require('./isNilOrEmpty');\n\nObject.keys(_isNilOrEmpty).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _isNilOrEmpty[key];\n    }\n  });\n});\n\nvar _isNotNilOrEmpty = require('./isNotNilOrEmpty');\n\nObject.keys(_isNotNilOrEmpty).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _isNotNilOrEmpty[key];\n    }\n  });\n});\n\nvar _log = require('./log');\n\nObject.keys(_log).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _log[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar map = require('./map');\n\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nmodule.exports = _curry2(function ap(applyF, applyX) {\n  return (\n    typeof applyX['fantasy-land/ap'] === 'function' ?\n      applyX['fantasy-land/ap'](applyF) :\n    typeof applyF.ap === 'function' ?\n      applyF.ap(applyX) :\n    typeof applyF === 'function' ?\n      function(x) { return applyF(x)(applyX(x)); } :\n    // else\n      _reduce(function(acc, f) { return _concat(acc, map(f, applyX)); }, [], applyF)\n  );\n});\n","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return (n << 0) === n;\n};\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _makeFlat = require('./internal/_makeFlat');\nvar _xchain = require('./internal/_xchain');\nvar map = require('./map');\n\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function(x) { return fn(monad(x))(x); };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n */\nmodule.exports = _curry1(function type(val) {\n  return val === null      ? 'Null'      :\n         val === undefined ? 'Undefined' :\n         Object.prototype.toString.call(val).slice(8, -1);\n});\n","var pipe = require('./pipe');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry1 = require('./internal/_curry1');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar _isFunction = require('./internal/_isFunction');\nvar _isString = require('./internal/_isString');\nvar toString = require('./toString');\n\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nmodule.exports = _curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n","module.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n","var _curry3 = require('./internal/_curry3');\nvar adjust = require('./adjust');\nvar always = require('./always');\n\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nmodule.exports = _curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtake = require('./internal/_xtake');\nvar slice = require('./slice');\n\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n","var _curry1 = require('./internal/_curry1');\nvar _identity = require('./internal/_identity');\n\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nmodule.exports = _curry1(_identity);\n","module.exports = function _identity(x) { return x; };\n","var identity = require('./identity');\nvar uniqBy = require('./uniqBy');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nmodule.exports = uniqBy(identity);\n","var _containsWith = require('./internal/_containsWith');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nmodule.exports = _curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var _objectAssign = require('./_objectAssign');\n\nmodule.exports =\n  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !(_has(k, result))) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNilOrEmpty = undefined;\n\nvar _ramda = require('ramda');\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if an array or string Is null or Empty.\n * @param {string|*[]} value\n */\nvar isNilOrEmpty = exports.isNilOrEmpty = _ramda2.default.anyPass([_ramda2.default.isNil, _ramda2.default.isEmpty]);\n//# sourceMappingURL=isNilOrEmpty.js.map\n//# sourceMappingURL=isNilOrEmpty.js.map","module.exports = {\n  F: require('./src/F'),\n  T: require('./src/T'),\n  __: require('./src/__'),\n  add: require('./src/add'),\n  addIndex: require('./src/addIndex'),\n  adjust: require('./src/adjust'),\n  all: require('./src/all'),\n  allPass: require('./src/allPass'),\n  always: require('./src/always'),\n  and: require('./src/and'),\n  any: require('./src/any'),\n  anyPass: require('./src/anyPass'),\n  ap: require('./src/ap'),\n  aperture: require('./src/aperture'),\n  append: require('./src/append'),\n  apply: require('./src/apply'),\n  applySpec: require('./src/applySpec'),\n  ascend: require('./src/ascend'),\n  assoc: require('./src/assoc'),\n  assocPath: require('./src/assocPath'),\n  binary: require('./src/binary'),\n  bind: require('./src/bind'),\n  both: require('./src/both'),\n  call: require('./src/call'),\n  chain: require('./src/chain'),\n  clamp: require('./src/clamp'),\n  clone: require('./src/clone'),\n  comparator: require('./src/comparator'),\n  complement: require('./src/complement'),\n  compose: require('./src/compose'),\n  composeK: require('./src/composeK'),\n  composeP: require('./src/composeP'),\n  concat: require('./src/concat'),\n  cond: require('./src/cond'),\n  construct: require('./src/construct'),\n  constructN: require('./src/constructN'),\n  contains: require('./src/contains'),\n  converge: require('./src/converge'),\n  countBy: require('./src/countBy'),\n  curry: require('./src/curry'),\n  curryN: require('./src/curryN'),\n  dec: require('./src/dec'),\n  defaultTo: require('./src/defaultTo'),\n  descend: require('./src/descend'),\n  difference: require('./src/difference'),\n  differenceWith: require('./src/differenceWith'),\n  dissoc: require('./src/dissoc'),\n  dissocPath: require('./src/dissocPath'),\n  divide: require('./src/divide'),\n  drop: require('./src/drop'),\n  dropLast: require('./src/dropLast'),\n  dropLastWhile: require('./src/dropLastWhile'),\n  dropRepeats: require('./src/dropRepeats'),\n  dropRepeatsWith: require('./src/dropRepeatsWith'),\n  dropWhile: require('./src/dropWhile'),\n  either: require('./src/either'),\n  empty: require('./src/empty'),\n  endsWith: require('./src/endsWith'),\n  eqBy: require('./src/eqBy'),\n  eqProps: require('./src/eqProps'),\n  equals: require('./src/equals'),\n  evolve: require('./src/evolve'),\n  filter: require('./src/filter'),\n  find: require('./src/find'),\n  findIndex: require('./src/findIndex'),\n  findLast: require('./src/findLast'),\n  findLastIndex: require('./src/findLastIndex'),\n  flatten: require('./src/flatten'),\n  flip: require('./src/flip'),\n  forEach: require('./src/forEach'),\n  forEachObjIndexed: require('./src/forEachObjIndexed'),\n  fromPairs: require('./src/fromPairs'),\n  groupBy: require('./src/groupBy'),\n  groupWith: require('./src/groupWith'),\n  gt: require('./src/gt'),\n  gte: require('./src/gte'),\n  has: require('./src/has'),\n  hasIn: require('./src/hasIn'),\n  head: require('./src/head'),\n  identical: require('./src/identical'),\n  identity: require('./src/identity'),\n  ifElse: require('./src/ifElse'),\n  inc: require('./src/inc'),\n  indexBy: require('./src/indexBy'),\n  indexOf: require('./src/indexOf'),\n  init: require('./src/init'),\n  innerJoin: require('./src/innerJoin'),\n  insert: require('./src/insert'),\n  insertAll: require('./src/insertAll'),\n  intersection: require('./src/intersection'),\n  intersectionWith: require('./src/intersectionWith'),\n  intersperse: require('./src/intersperse'),\n  into: require('./src/into'),\n  invert: require('./src/invert'),\n  invertObj: require('./src/invertObj'),\n  invoker: require('./src/invoker'),\n  is: require('./src/is'),\n  isEmpty: require('./src/isEmpty'),\n  isNil: require('./src/isNil'),\n  join: require('./src/join'),\n  juxt: require('./src/juxt'),\n  keys: require('./src/keys'),\n  keysIn: require('./src/keysIn'),\n  last: require('./src/last'),\n  lastIndexOf: require('./src/lastIndexOf'),\n  length: require('./src/length'),\n  lens: require('./src/lens'),\n  lensIndex: require('./src/lensIndex'),\n  lensPath: require('./src/lensPath'),\n  lensProp: require('./src/lensProp'),\n  lift: require('./src/lift'),\n  liftN: require('./src/liftN'),\n  lt: require('./src/lt'),\n  lte: require('./src/lte'),\n  map: require('./src/map'),\n  mapAccum: require('./src/mapAccum'),\n  mapAccumRight: require('./src/mapAccumRight'),\n  mapObjIndexed: require('./src/mapObjIndexed'),\n  match: require('./src/match'),\n  mathMod: require('./src/mathMod'),\n  max: require('./src/max'),\n  maxBy: require('./src/maxBy'),\n  mean: require('./src/mean'),\n  median: require('./src/median'),\n  memoize: require('./src/memoize'),\n  memoizeWith: require('./src/memoizeWith'),\n  merge: require('./src/merge'),\n  mergeAll: require('./src/mergeAll'),\n  mergeDeepLeft: require('./src/mergeDeepLeft'),\n  mergeDeepRight: require('./src/mergeDeepRight'),\n  mergeDeepWith: require('./src/mergeDeepWith'),\n  mergeDeepWithKey: require('./src/mergeDeepWithKey'),\n  mergeWith: require('./src/mergeWith'),\n  mergeWithKey: require('./src/mergeWithKey'),\n  min: require('./src/min'),\n  minBy: require('./src/minBy'),\n  modulo: require('./src/modulo'),\n  multiply: require('./src/multiply'),\n  nAry: require('./src/nAry'),\n  negate: require('./src/negate'),\n  none: require('./src/none'),\n  not: require('./src/not'),\n  nth: require('./src/nth'),\n  nthArg: require('./src/nthArg'),\n  o: require('./src/o'),\n  objOf: require('./src/objOf'),\n  of: require('./src/of'),\n  omit: require('./src/omit'),\n  once: require('./src/once'),\n  or: require('./src/or'),\n  over: require('./src/over'),\n  pair: require('./src/pair'),\n  partial: require('./src/partial'),\n  partialRight: require('./src/partialRight'),\n  partition: require('./src/partition'),\n  path: require('./src/path'),\n  pathEq: require('./src/pathEq'),\n  pathOr: require('./src/pathOr'),\n  pathSatisfies: require('./src/pathSatisfies'),\n  pick: require('./src/pick'),\n  pickAll: require('./src/pickAll'),\n  pickBy: require('./src/pickBy'),\n  pipe: require('./src/pipe'),\n  pipeK: require('./src/pipeK'),\n  pipeP: require('./src/pipeP'),\n  pluck: require('./src/pluck'),\n  prepend: require('./src/prepend'),\n  product: require('./src/product'),\n  project: require('./src/project'),\n  prop: require('./src/prop'),\n  propEq: require('./src/propEq'),\n  propIs: require('./src/propIs'),\n  propOr: require('./src/propOr'),\n  propSatisfies: require('./src/propSatisfies'),\n  props: require('./src/props'),\n  range: require('./src/range'),\n  reduce: require('./src/reduce'),\n  reduceBy: require('./src/reduceBy'),\n  reduceRight: require('./src/reduceRight'),\n  reduceWhile: require('./src/reduceWhile'),\n  reduced: require('./src/reduced'),\n  reject: require('./src/reject'),\n  remove: require('./src/remove'),\n  repeat: require('./src/repeat'),\n  replace: require('./src/replace'),\n  reverse: require('./src/reverse'),\n  scan: require('./src/scan'),\n  sequence: require('./src/sequence'),\n  set: require('./src/set'),\n  slice: require('./src/slice'),\n  sort: require('./src/sort'),\n  sortBy: require('./src/sortBy'),\n  sortWith: require('./src/sortWith'),\n  split: require('./src/split'),\n  splitAt: require('./src/splitAt'),\n  splitEvery: require('./src/splitEvery'),\n  splitWhen: require('./src/splitWhen'),\n  startsWith: require('./src/startsWith'),\n  subtract: require('./src/subtract'),\n  sum: require('./src/sum'),\n  symmetricDifference: require('./src/symmetricDifference'),\n  symmetricDifferenceWith: require('./src/symmetricDifferenceWith'),\n  tail: require('./src/tail'),\n  take: require('./src/take'),\n  takeLast: require('./src/takeLast'),\n  takeLastWhile: require('./src/takeLastWhile'),\n  takeWhile: require('./src/takeWhile'),\n  tap: require('./src/tap'),\n  test: require('./src/test'),\n  times: require('./src/times'),\n  toLower: require('./src/toLower'),\n  toPairs: require('./src/toPairs'),\n  toPairsIn: require('./src/toPairsIn'),\n  toString: require('./src/toString'),\n  toUpper: require('./src/toUpper'),\n  transduce: require('./src/transduce'),\n  transpose: require('./src/transpose'),\n  traverse: require('./src/traverse'),\n  trim: require('./src/trim'),\n  tryCatch: require('./src/tryCatch'),\n  type: require('./src/type'),\n  unapply: require('./src/unapply'),\n  unary: require('./src/unary'),\n  uncurryN: require('./src/uncurryN'),\n  unfold: require('./src/unfold'),\n  union: require('./src/union'),\n  unionWith: require('./src/unionWith'),\n  uniq: require('./src/uniq'),\n  uniqBy: require('./src/uniqBy'),\n  uniqWith: require('./src/uniqWith'),\n  unless: require('./src/unless'),\n  unnest: require('./src/unnest'),\n  until: require('./src/until'),\n  update: require('./src/update'),\n  useWith: require('./src/useWith'),\n  values: require('./src/values'),\n  valuesIn: require('./src/valuesIn'),\n  view: require('./src/view'),\n  when: require('./src/when'),\n  where: require('./src/where'),\n  whereEq: require('./src/whereEq'),\n  without: require('./src/without'),\n  xprod: require('./src/xprod'),\n  zip: require('./src/zip'),\n  zipObj: require('./src/zipObj'),\n  zipWith: require('./src/zipWith')\n};\n","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nmodule.exports = _curry2(function and(a, b) {\n  return a && b;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\n\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function(result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nmodule.exports = _curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\n","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\nvar _isArray = require('./internal/_isArray');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\nvar isNil = require('./isNil');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nmodule.exports = _curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = (!isNil(obj) && _has(idx, obj)) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nmodule.exports = _curry1(function isNil(x) { return x == null; });\n","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar ap = require('./ap');\nvar curryN = require('./curryN');\nvar map = require('./map');\n\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function() {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n","var _isArrayLike = require('./_isArrayLike');\n\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nmodule.exports = function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\n","var _cloneRegExp = require('./_cloneRegExp');\nvar type = require('../type');\n\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ?\n        _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':  return copy({});\n    case 'Array':   return copy([]);\n    case 'Date':    return new Date(value.valueOf());\n    case 'RegExp':  return _cloneRegExp(value);\n    default:        return value;\n  }\n};\n","module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n","var _arity = require('./internal/_arity');\nvar _pipe = require('./internal/_pipe');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n","var chain = require('./chain');\nvar compose = require('./compose');\nvar map = require('./map');\n\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nmodule.exports = function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n};\n","var _arity = require('./internal/_arity');\nvar _pipeP = require('./internal/_pipeP');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nmodule.exports = function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipeP, arguments[0], tail(arguments)));\n};\n","var equals = require('../equals');\n\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n","module.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n","var _curry2 = require('./internal/_curry2');\nvar curry = require('./curry');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n","var _curry2 = require('./internal/_curry2');\nvar _map = require('./internal/_map');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function(fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nmodule.exports = _curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nmodule.exports = _curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\n","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nmodule.exports = _curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) &&\n        !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nmodule.exports = _curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nmodule.exports = _curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdrop = require('./internal/_xdrop');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar last = require('./last');\n\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\n\n","var nth = require('./nth');\n\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nmodule.exports = nth(-1);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});\n","var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x['fantasy-land/empty'] === 'function') ?\n      x['fantasy-land/empty']() :\n    (x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function') ?\n      x.constructor['fantasy-land/empty']() :\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n","var _curry2 = require('./internal/_curry2');\nvar drop = require('./drop');\n\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nmodule.exports = _curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n","var _Set = require('./internal/_Set');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nmodule.exports = _curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nmodule.exports = _curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n","var _curry1 = require('./internal/_curry1');\nvar converge = require('./converge');\n\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nmodule.exports = _curry1(function juxt(fns) {\n  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);\n});\n","var _curry1 = require('./internal/_curry1');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n","module.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar sum = require('./sum');\n\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nmodule.exports = _curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n","var add = require('./add');\nvar reduce = require('./reduce');\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = _curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function() {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nmodule.exports = (function() {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function(x) {\n    return {value: x, map: function(f) { return Identity(f(x)); }};\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function(y) { return Identity(f(y)); })(x).value;\n  });\n}());\n","var _arity = require('./_arity');\nvar _curry2 = require('./_curry2');\n\n\nmodule.exports = function _createPartialApplicator(concat) {\n  return _curry2(function(fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function() {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nmodule.exports = _curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nmodule.exports = _curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nmodule.exports = _curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function() {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a, b -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *          -               -2\n *         / \\              / \\\n *        1   -            1   3\n *           / \\              / \\\n *          2   -     ==>    2  -1\n *             / \\              / \\\n *            3   -            3   4\n *               / \\              / \\\n *              4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n","var _curry2 = require('./internal/_curry2');\nvar ap = require('./ap');\nvar map = require('./map');\nvar prepend = require('./prepend');\nvar reduceRight = require('./reduceRight');\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nmodule.exports = _curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\n","var always = require('./always');\n\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nmodule.exports = always(false);\n","var always = require('./always');\n\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nmodule.exports = always(true);\n","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n","var _concat = require('./internal/_concat');\nvar _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xall = require('./internal/_xall');\n\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function(result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function(result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nmodule.exports = _curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nmodule.exports = _curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\n","var _aperture = require('./internal/_aperture');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xaperture = require('./internal/_xaperture');\n\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));\n","module.exports = function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n};\n","var _concat = require('./_concat');\nvar _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function(result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function() {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n                   Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n}());\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n","var _curry1 = require('./internal/_curry1');\nvar apply = require('./apply');\nvar curryN = require('./curryN');\nvar map = require('./map');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\nvar values = require('./values');\n\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *                                      sum: R.add,\n *                                      nested: { mul: R.multiply }\n *                                   });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nmodule.exports = _curry1(function applySpec(spec) {\n  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },\n             spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))),\n                function() {\n                  var args = arguments;\n                  return map(function(f) { return apply(f, args); }, spec);\n                });\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nmodule.exports = _curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar and = require('./and');\nvar lift = require('./lift');\n\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nmodule.exports = _curry2(function both(f, g) {\n  return _isFunction(f) ?\n    function _both() {\n      return f.apply(this, arguments) && g.apply(this, arguments);\n    } :\n    lift(and)(f, g);\n});\n","var curry = require('./curry');\n\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.times(R.always(' ')),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nmodule.exports = curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n","var _curry2 = require('./_curry2');\nvar _flatCat = require('./_flatCat');\nvar map = require('../map');\n\n\nmodule.exports = _curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n","var _forceReduced = require('./_forceReduced');\nvar _isArrayLike = require('./_isArrayLike');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  var preservingReduced = function(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  return function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n}());\n","module.exports = function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};\n","var _curry3 = require('./internal/_curry3');\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nmodule.exports = _curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min :\n         value > max ? max :\n         value;\n});\n","var _clone = require('./internal/_clone');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ?\n    value.clone() :\n    _clone(value, [], [], true);\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a, b -> Boolean) -> (a, b -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nmodule.exports = _curry1(function comparator(pred) {\n  return function(a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n","var lift = require('./lift');\nvar not = require('./not');\n\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nmodule.exports = lift(not);\n","module.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n","var pipeP = require('./pipeP');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nmodule.exports = function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n};\n","module.exports = function _pipeP(f, g) {\n  return function() {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function(x) {\n      return g.call(ctx, x);\n    });\n  };\n};\n","var _contains = require('./_contains');\nvar _map = require('./_map');\nvar _quote = require('./_quote');\nvar _toISOString = require('./_toISOString');\nvar keys = require('../keys');\nvar reject = require('../reject');\n\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function(obj, keys) {\n    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};\n","var _arrayFromIterator = require('./_arrayFromIterator');\nvar _functionName = require('./_functionName');\nvar _has = require('./_has');\nvar identical = require('../identical');\nvar keys = require('../keys');\nvar type = require('../type');\n\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) &&\n           typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) &&\n           typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' &&\n          _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline &&\n            a.sticky === b.sticky &&\n            a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n      break;\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  stackA.pop();\n  stackB.pop();\n  return true;\n};\n","module.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n};\n","module.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};\n","module.exports = function _quote(s) {\n  var escaped = s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    .replace(/\\v/g, '\\\\v')\n    .replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};\n","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = (function() {\n  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\n  return typeof Date.prototype.toISOString === 'function' ?\n    function _toISOString(d) {\n      return d.toISOString();\n    } :\n    function _toISOString(d) {\n      return (\n        d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds()) + '.' +\n        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n      );\n    };\n}());\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar map = require('./map');\nvar max = require('./max');\nvar reduce = require('./reduce');\n\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nmodule.exports = _curry1(function cond(pairs) {\n  var arity = reduce(max,\n                     0,\n                     map(function(pair) { return pair[0].length; }, pairs));\n  return _arity(arity, function() {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\n","var _curry1 = require('./internal/_curry1');\nvar constructN = require('./constructN');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nmodule.exports = _curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nmodule.exports = _curry2(_contains);\n","var reduceBy = require('./reduceBy');\n\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nmodule.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);\n","var _curryN = require('./_curryN');\nvar _has = require('./_has');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function(result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function(result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [],\n                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n                 });\n}());\n","var add = require('./add');\n\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nmodule.exports = add(-1);\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\nvar dissoc = require('./dissoc');\nvar remove = require('./remove');\nvar update = require('./update');\n\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nmodule.exports = _curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nmodule.exports = _curry2(function divide(a, b) { return a / b; });\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function(result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLast = require('./internal/_dropLast');\nvar _xdropLast = require('./internal/_xdropLast');\n\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n","var take = require('../take');\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function(result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n}());\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] =  function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLastWhile = require('./internal/_dropLastWhile');\nvar _xdropLastWhile = require('./internal/_xdropLastWhile');\n\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} predicate The function to be called on each element\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));\n","module.exports = function dropLastWhile(pred, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && pred(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx + 1);\n};\n","var _curry2 = require('./_curry2');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function(result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.retain(result, input)\n                         : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function(result, input) {\n    result = _reduce(\n      this.xf['@@transducer/step'],\n      result,\n      this.retained\n    );\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function(result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar dropRepeatsWith = require('./dropRepeatsWith');\nvar equals = require('./equals');\n\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropWhile = require('./internal/_xdropWhile');\n\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n */\nmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && pred(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, idx);\n}));\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar lift = require('./lift');\nvar or = require('./or');\n\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ?\n    function _either() {\n      return f.apply(this, arguments) || g.apply(this, arguments);\n    } :\n    lift(or)(f, g);\n});\n","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar takeLast = require('./takeLast');\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nmodule.exports = _curry2(function(suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nmodule.exports = _curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfind = require('./internal/_xfind');\n\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindIndex = require('./internal/_xfindIndex');\n\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLast = require('./internal/_xfindLast');\n\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLastIndex = require('./internal/_xfindLastIndex');\n\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _makeFlat = require('./internal/_makeFlat');\n\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nmodule.exports = _curry1(_makeFlat(true));\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\n","var _curry2 = require('./internal/_curry2');\nvar keys = require('./keys');\n\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\nvar reduceBy = require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\n","var _curry2 = require('./internal/_curry2');\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nmodule.exports = _curry2(function(fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gte(a, b) { return a >= b; });\n","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nmodule.exports = _curry2(_has);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nmodule.exports = _curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n","var nth = require('./nth');\n\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nmodule.exports = nth(0);\n","var _curry3 = require('./internal/_curry3');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n","var add = require('./add');\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n","var reduceBy = require('./reduceBy');\n\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nmodule.exports = reduceBy(function(acc, elem) { return elem; }, null);\n","var _curry2 = require('./internal/_curry2');\nvar _indexOf = require('./internal/_indexOf');\nvar _isArray = require('./internal/_isArray');\n\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ?\n    xs.indexOf(target) :\n    _indexOf(xs, target, 0);\n});\n","var slice = require('./slice');\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar _filter = require('./internal/_filter');\n\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig (a -> b -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function(x) { return _containsWith(pred, x, ys); }, xs);\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nmodule.exports = _curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nmodule.exports = _curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx),\n                   elts,\n                   Array.prototype.slice.call(list, idx));\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar _filter = require('./internal/_filter');\nvar flip = require('./flip');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nmodule.exports = _curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\n","var _contains = require('./_contains');\n\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = (function() {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function(item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function(item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  function hasOrAdd(item, shouldAdd, set) {\n    var type = typeof item;\n    var prevSize, newSize;\n    switch (type) {\n      case 'string':\n      case 'number':\n        // distinguish between +0 and -0\n        if (item === 0 && 1 / item === -Infinity) {\n          if (set._items['-0']) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items['-0'] = true;\n            }\n            return false;\n          }\n        }\n        // these types can all utilise the native Set\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = {};\n              set._items[type][item] = true;\n            }\n            return false;\n          } else if (item in set._items[type]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][item] = true;\n            }\n            return false;\n          }\n        }\n\n      case 'boolean':\n        // set._items['boolean'] holds a two element array\n        // representing [ falseExists, trueExists ]\n        if (type in set._items) {\n          var bIdx = item ? 1 : 0;\n          if (set._items[type][bIdx]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][bIdx] = true;\n            }\n            return false;\n          }\n        } else {\n          if (shouldAdd) {\n            set._items[type] = item ? [false, true] : [true, false];\n          }\n          return false;\n        }\n\n      case 'function':\n        // compare functions for reference equality\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = [item];\n            }\n            return false;\n          }\n          if (!_contains(item, set._items[type])) {\n            if (shouldAdd) {\n              set._items[type].push(item);\n            }\n            return false;\n          }\n          return true;\n        }\n\n      case 'undefined':\n        if (set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type] = true;\n          }\n          return false;\n        }\n\n      case 'object':\n        if (item === null) {\n          if (!set._items['null']) {\n            if (shouldAdd) {\n              set._items['null'] = true;\n            }\n            return false;\n          }\n          return true;\n        }\n      /* falls through */\n      default:\n        // reduce the search size of heterogeneous sets by creating buckets\n        // for each type.\n        type = Object.prototype.toString.call(item);\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        // scan through all previously applied items\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n    }\n  }\n  return _Set;\n}());\n","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate function that determines whether\n *        the two supplied elements are equal.\n * @param {Array} list1 One list of items to compare\n * @param {Array} list2 A second list of items to compare\n * @return {Array} A new list containing those elements common to both lists.\n * @see R.innerJoin\n * @deprecated since v0.24.0\n * @example\n *\n *      var buffaloSpringfield = [\n *        {id: 824, name: 'Richie Furay'},\n *        {id: 956, name: 'Dewey Martin'},\n *        {id: 313, name: 'Bruce Palmer'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *      var csny = [\n *        {id: 204, name: 'David Crosby'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 539, name: 'Graham Nash'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *\n *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  var results = [];\n  var idx = 0;\n  while (idx < filteredList.length) {\n    if (_containsWith(pred, filteredList[idx], lookupList)) {\n      results[results.length] = filteredList[idx];\n    }\n    idx += 1;\n  }\n  return uniqWith(pred, results);\n});\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\n","var _clone = require('./internal/_clone');\nvar _curry3 = require('./internal/_curry3');\nvar _isTransformer = require('./internal/_isTransformer');\nvar _reduce = require('./internal/_reduce');\nvar _stepCat = require('./internal/_stepCat');\n\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nmodule.exports = _curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ?\n    _reduce(xf(acc), acc['@@transducer/init'](), list) :\n    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n","var _assign = require('./_assign');\nvar _identity = require('./_identity');\nvar _isArrayLike = require('./_isArrayLike');\nvar _isTransformer = require('./_isTransformer');\nvar objOf = require('../objOf');\n\n\nmodule.exports = (function() {\n  var _stepCatArray = {\n    '@@transducer/init': Array,\n    '@@transducer/step': function(xs, x) {\n      xs.push(x);\n      return xs;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatString = {\n    '@@transducer/init': String,\n    '@@transducer/step': function(a, b) { return a + b; },\n    '@@transducer/result': _identity\n  };\n  var _stepCatObject = {\n    '@@transducer/init': Object,\n    '@@transducer/step': function(result, input) {\n      return _assign(\n        result,\n        _isArrayLike(input) ? objOf(input[0], input[1]) : input\n      );\n    },\n    '@@transducer/result': _identity\n  };\n\n  return function _stepCat(obj) {\n    if (_isTransformer(obj)) {\n      return obj;\n    }\n    if (_isArrayLike(obj)) {\n      return _stepCatArray;\n    }\n    if (typeof obj === 'string') {\n      return _stepCatString;\n    }\n    if (typeof obj === 'object') {\n      return _stepCatObject;\n    }\n    throw new Error('Cannot create transformer for ' + obj);\n  };\n}());\n","var _has = require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n};\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar keys = require('./keys');\n\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nmodule.exports = _curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : (out[val] = []);\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\n","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\n","var _curry1 = require('./internal/_curry1');\nvar empty = require('./empty');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n","var invoker = require('./invoker');\n\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nmodule.exports = invoker(1, 'join');\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nmodule.exports = _curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar equals = require('./equals');\n\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\n","var _curry1 = require('./internal/_curry1');\nvar lens = require('./lens');\nvar nth = require('./nth');\nvar update = require('./update');\n\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nmodule.exports = _curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n","var _curry1 = require('./internal/_curry1');\nvar assocPath = require('./assocPath');\nvar lens = require('./lens');\nvar path = require('./path');\n\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nmodule.exports = _curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n","var _curry1 = require('./internal/_curry1');\nvar assoc = require('./assoc');\nvar lens = require('./lens');\nvar prop = require('./prop');\n\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lt(a, b) { return a < b; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lte(a, b) { return a <= b; });\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\n","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar keys = require('./keys');\n\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function(acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nmodule.exports = _curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\n\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nmodule.exports = _curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) { return NaN; }\n  if (!_isInteger(p) || p < 1) { return NaN; }\n  return ((m % p) + p) % p;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nmodule.exports = _curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n","var _curry1 = require('./internal/_curry1');\nvar mean = require('./mean');\n\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nmodule.exports = _curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n","var memoizeWith = require('./memoizeWith');\nvar toString = require('./toString');\n\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = memoizeWith(function() {\n  return toString(arguments);\n});\n","var _assign = require('./internal/_assign');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n","var _assign = require('./internal/_assign');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nmodule.exports = _curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\n","var _curry2 = require('./internal/_curry2');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nmodule.exports = _curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n","var _curry2 = require('./internal/_curry2');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nmodule.exports = _curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n","var _curry3 = require('./internal/_curry3');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nmodule.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n","var _curry3 = require('./internal/_curry3');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nmodule.exports = _curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function(_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nmodule.exports = _curry2(function min(a, b) { return b < a ? b : a; });\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nmodule.exports = _curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nmodule.exports = _curry1(function negate(n) { return -n; });\n","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\nvar any = require('./any');\n\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n */\nmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar nth = require('./nth');\n\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nmodule.exports = _curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function() {\n    return nth(n, arguments);\n  });\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + lastName\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nmodule.exports = _curry3(function o(f, g, x) {\n  return f(g(x));\n});\n","var _curry1 = require('./internal/_curry1');\nvar _of = require('./internal/_of');\n\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nmodule.exports = _curry1(_of);\n","module.exports = function _of(x) { return [x]; };\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nmodule.exports = _curry2(function omit(names, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (!_contains(prop, names)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nmodule.exports = _curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function() {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nmodule.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });\n","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nmodule.exports = _createPartialApplicator(_concat);\n","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\nvar flip = require('./flip');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nmodule.exports = _createPartialApplicator(flip(_concat));\n","var filter = require('./filter');\nvar juxt = require('./juxt');\nvar reject = require('./reject');\n\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nmodule.exports = juxt([filter, reject]);\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\nvar path = require('./path');\n\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nmodule.exports = _curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n","var _curry3 = require('./internal/_curry3');\nvar defaultTo = require('./defaultTo');\nvar path = require('./path');\n\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nmodule.exports = _curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n","var _curry3 = require('./internal/_curry3');\nvar path = require('./path');\n\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nmodule.exports = _curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nmodule.exports = _curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n","var composeK = require('./composeK');\nvar reverse = require('./reverse');\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nmodule.exports = function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n};\n","var multiply = require('./multiply');\nvar reduce = require('./reduce');\n\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nmodule.exports = reduce(multiply, 1);\n","var _map = require('./internal/_map');\nvar identity = require('./identity');\nvar pickAll = require('./pickAll');\nvar useWith = require('./useWith');\n\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.equals, R.propSatisfies\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nmodule.exports = _curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n","var _curry3 = require('./internal/_curry3');\nvar is = require('./is');\n\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nmodule.exports = _curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nmodule.exports = _curry3(function propOr(val, p, obj) {\n  return (obj != null && _has(p, obj)) ? obj[p] : val;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nmodule.exports = _curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\n","var _curryN = require('./internal/_curryN');\nvar _reduce = require('./internal/_reduce');\nvar _reduced = require('./internal/_reduced');\n\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function(acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n","var _curry1 = require('./internal/_curry1');\nvar _reduced = require('./internal/_reduced');\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nmodule.exports = _curry1(_reduced);\n","var _curry2 = require('./internal/_curry2');\nvar always = require('./always');\nvar times = require('./times');\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a,b -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nmodule.exports = _curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\nvar always = require('./always');\nvar over = require('./over');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nmodule.exports = _curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nmodule.exports = _curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [a -> a -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nmodule.exports = _curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\n","var invoker = require('./invoker');\n\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nmodule.exports = invoker(1, 'split');\n","var _curry2 = require('./internal/_curry2');\nvar length = require('./length');\nvar slice = require('./slice');\n\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nmodule.exports = _curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n","var _curry2 = require('./internal/_curry2');\nvar slice = require('./slice');\n\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nmodule.exports = _curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nmodule.exports = _curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar take = require('./take');\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nmodule.exports = _curry2(function(prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nmodule.exports = _curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n","var _curry2 = require('./internal/_curry2');\nvar concat = require('./concat');\nvar difference = require('./difference');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n","var _curry3 = require('./internal/_curry3');\nvar concat = require('./concat');\nvar differenceWith = require('./differenceWith');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n */\nmodule.exports = _curry2(function takeLastWhile(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && fn(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, idx + 1);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtakeWhile = require('./internal/_xtakeWhile');\n\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n */\nmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && fn(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx);\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nmodule.exports = _curry2(function tap(fn, x) {\n  fn(x);\n  return x;\n});\n","var _cloneRegExp = require('./internal/_cloneRegExp');\nvar _curry2 = require('./internal/_curry2');\nvar _isRegExp = require('./internal/_isRegExp');\nvar toString = require('./toString');\n\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nmodule.exports = _curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\n","module.exports = function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n};\n","var invoker = require('./invoker');\n\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nmodule.exports = invoker(0, 'toLowerCase');\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\n\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nmodule.exports = _curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\n","var invoker = require('./invoker');\n\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nmodule.exports = invoker(0, 'toUpperCase');\n","var _reduce = require('./internal/_reduce');\nvar _xwrap = require('./internal/_xwrap');\nvar curryN = require('./curryN');\n\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nmodule.exports = _curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\nvar map = require('./map');\nvar sequence = require('./sequence');\n\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nmodule.exports = _curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ?\n    traversable['fantasy-land/traverse'](f, of) :\n    sequence(of, map(f, traversable));\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nmodule.exports = (function() {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n           '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}());\n","var _arity = require('./internal/_arity');\nvar _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nmodule.exports = _curry1(function unapply(fn) {\n  return function() {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nmodule.exports = _curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nmodule.exports = _curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function() {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nmodule.exports = _curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar compose = require('./compose');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(compose(uniq, _concat));\n","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n","var _identity = require('./internal/_identity');\nvar chain = require('./chain');\n\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nmodule.exports = chain(_identity);\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nmodule.exports = _curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nmodule.exports = _curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nmodule.exports = (function() {\n  // `Const` is a functor that effectively ignores the function given to `map`.\n  var Const = function(x) {\n    return {value: x, 'fantasy-land/map': function() { return this; }};\n  };\n\n  return _curry2(function view(lens, x) {\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    return lens(Const)(x).value;\n  });\n}());\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar map = require('./map');\nvar where = require('./where');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nmodule.exports = _curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar flip = require('./flip');\nvar reject = require('./reject');\n\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nmodule.exports = _curry2(function(xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nmodule.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,b -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nmodule.exports = _curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNotNilOrEmpty = undefined;\n\nvar _ramda = require('ramda');\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nvar _isNilOrEmpty = require('./isNilOrEmpty');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if an array or string are NOT null, undefined or Empty.\n */\nvar isNotNilOrEmpty = exports.isNotNilOrEmpty = _ramda2.default.compose(_ramda2.default.not, _isNilOrEmpty.isNilOrEmpty);\n//# sourceMappingURL=isNotNilOrEmpty.js.map\n//# sourceMappingURL=isNotNilOrEmpty.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = undefined;\n\nvar _ptzLog = require('ptz-log');\n\n/**\n * run console.log() and return the same obj\n * @param  {any} o any object\n * @return {any}   same object\n */\nvar log = exports.log = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function (obj) {\n    _ptzLog.log.apply(undefined, args.concat([obj]));\n    return obj;\n  };\n};\n//# sourceMappingURL=log.js.map\n//# sourceMappingURL=log.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.logInOut = exports.log = undefined;\n\nvar _jsonStringifySafe = require('json-stringify-safe');\n\nvar _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _ramda = require('ramda');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logColors = {\n    reset: '\\x1B[0m', bright: '\\x1B[1m',\n    dim: '\\x1B[2m', underscore: '\\x1B[4m',\n    blink: '\\x1B[5m', reverse: '\\x1B[7m',\n    hidden: '\\x1B[8m',\n    black: '\\x1B[30m',\n    red: '\\x1B[31m', green: '\\x1B[32m',\n    yellow: '\\x1B[33m', blue: '\\x1B[34m',\n    magenta: '\\x1B[35m', cyan: '\\x1B[36m',\n    white: '\\x1B[37m'\n};\nvar render = function render(txt, arg) {\n    if ((0, _ramda.isNil)(arg)) return '' + txt + arg + ' ';\n    if (arg.ptzLogColor) {\n        return '' + txt + logColors[arg.ptzLogColor];\n    }\n    if ((0, _ramda.is)(Object, arg)) {\n        return txt + (0, _jsonStringifySafe2.default)(arg, null, 2);\n    }\n    return txt + '\\n' + arg + ' ';\n};\nvar log = function log() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    console.log('\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');\n    console.log((0, _moment2.default)().format('H:mm:ss MMMM Do YYYY'));\n    console.log((0, _ramda.reduce)(render, '', args));\n    console.log(logColors.reset + '\\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n');\n};\nfunction logInOut(flog, fn) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n    }\n\n    flog('in: \\n', args);\n    var out = fn.apply(undefined, args);\n    flog('out: \\n', out);\n    return out;\n}\nexports.default = log;\nexports.log = log;\nexports.logInOut = logInOut;\n//# sourceMappingURL=index.js.map\n//# sourceMappingURL=index.js.map","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;"],"sourceRoot":""}