{"version":3,"sources":["webpack:///./src/pages/blog/index.pt.js","webpack:///./src/components/A.js","webpack:///./src/components/Link.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostAuthor.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCardList.js","webpack:///./src/components/pages/Blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_pages_Blog__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","A","styled","withConfig","displayName","componentId","theme","color","textDecoration","hover","withComponent","Link","Time","react_default","Object","assign","dateTime","date","index_es","value","Date","month","day","year","Wrapper","Grid","blog","author","fontFamily","fontSize","lineHeight","span","time","ProfilePicture","Gravatar","FollowButton","PostAuthor","_ref","minutes","cups","className","showFollow","timeToRead","columns","styled_css_grid_esm","middle","email","alt","name","width","height","href","twitter","target","PostAuthor_Date","components_Time","pubdate","Math","round","Array","fill","join","GridContainer","list","item","border","media","md","_templateObject","imageOnTop","Body","Cell","padding","Footer","scale","Title","h2","title","margin","TitleLink","Text","p","text","Label","div","Image","Img","PostCard","_ref2","post","to","fields","slug","sizes","frontmatter","image","childImageSharp","rows","excerpt","fillRule","PostCardList","gap","alignContent","posts","map","key","components_PostCard","_PostCardList__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","react_intl__WEBPACK_IMPORTED_MODULE_3__","_layout__WEBPACK_IMPORTED_MODULE_4__","styled_components__WEBPACK_IMPORTED_MODULE_5__","section","page","Header","header","H1","h1","Blog","data","site","siteMetadata","location","id","txt","meta","content","allMarkdownRemark","edges","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIeE,EAAA,iBAACO,GAAD,OAAWH,EAAAI,EAAAC,cAACH,EAAA,EAASC,IAE7B,IAAML,EAAS,4DCQPQ,SAZLC,EAAOH,EAAVI,WAAA,CAAAC,YAAA,IAAAC,YAAA,gBAAGH,CAAH,qGACM,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMP,EAAEQ,OACb,SAAAT,GAAK,OAAIA,EAAMQ,MAAMP,EAAES,gBAK7B,SAAAV,GAAK,OAAIA,EAAMQ,MAAMP,EAAEU,MAAMF,QCN/BN,MAAES,cAAcC,sHCkBhBC,EAjBF,SAACd,GACZ,OACEe,EAAAd,EAAAC,cAAA,OAAAc,OAAAC,OAAA,GAAUjB,EAAV,CAAiBkB,SAAUlB,EAAMmB,OAC/BJ,EAAAd,EAAAC,cAACkB,EAAA,EAAD,CACEC,MAAO,IAAIC,KAAKtB,EAAMmB,MACtBI,MAAM,OACNC,IAAI,UACJC,KAAK,cCHPC,UAAUtB,YAAOuB,KAAVtB,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGH,CAAH,mDACI,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOC,YACnC,SAAA9B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOE,UAC/B,SAAA/B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOG,cAG5CV,EAAOlB,IAAO6B,KAAV5B,WAAA,CAAAC,YAAA,mBAAAC,YAAA,YAAGH,CAAH,6BACC,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOK,KAAKzB,QAI3C0B,EAAiB/B,YAAOgC,KAAV/B,WAAA,CAAAC,YAAA,6BAAAC,YAAA,YAAGH,CAAH,sCAKdiC,EAAejC,IAAOH,EAAVI,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGH,CAAH,0QAoDHkC,IAlCI,SAAAC,GAAyD,IC1C1CC,EAC5BC,EDyCgBZ,EAAsDU,EAAtDV,OAAQa,EAA8CH,EAA9CG,UAAWvB,EAAmCoB,EAAnCpB,KAAMwB,EAA6BJ,EAA7BI,WAAYC,EAAiBL,EAAjBK,WACzD,OACE7B,EAAAd,EAAAC,cAACwB,EAAD,CAASmB,QAAS,WAAYH,UAAWA,GACvC3B,EAAAd,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,QAAM,GACVhC,EAAAd,EAAAC,cAACiC,EAAD,CAAgBa,MAAOnB,EAAOmB,MAAOC,IAAKpB,EAAOqB,KAAMC,MAAO,GAAIC,OAAQ,MAE5ErC,EAAAd,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,QAAM,GACVhC,EAAAd,EAAAC,cAAA,YACG2B,EAAOqB,KACNP,EACE5B,EAAAd,EAAAC,cAACmC,EAAD,CAAcgB,KAAI,sBAAwBxB,EAAOyB,QAAWC,OAAO,UACnExC,EAAAd,EAAAC,cAAA,uBAEA,MAENa,EAAAd,EAAAC,cAACsD,EAAD,KACEzC,EAAAd,EAAAC,cAACuD,EAAD,CACEC,QAAQ,UACRvC,KAAMA,IACLyB,GAAU,OC7DWJ,ED6DiBI,EC5D7CH,EAAOkB,KAAKC,MAAMpB,EAAU,GACtB,IAAIqB,MAAMpB,GAAQ,GAAGqB,KAAK,MAAMC,KAAK,IAA/C,IAAsDvB,EAAtD,qQCQF,IAAMwB,EAAgB5D,YAAOuB,KAAVtB,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGH,CAAH,kBAIbsB,EAAUtB,YAAO4D,GAAV3D,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGH,CAAH,wGACD,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKC,QAI5CC,IAAMC,GALGC,IAMP,SAAAtE,GAAK,OAAIA,EAAMuE,WAAN,2EAGT,MAIAC,EAAOpE,YAAOqE,KAAVpE,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGH,CAAH,iBACG,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKQ,UAG3CC,EAASvE,YAAOqE,KAAVpE,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGH,CAAH,6FACK,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOC,YACnC,SAAA9B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOE,UACnC,SAAAQ,GAAA,IAAG/B,EAAH+B,EAAG/B,MAAH,OAAkBA,EAAMoE,OAAO,KAA/B,IAAuCpE,EAAMoE,MAAM,KAAnD,IAA2DpE,EAAMoE,MAAM,IACnE,SAAA5E,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKC,OAAOG,aAK5C6C,EAAQzE,IAAO0E,GAAVzE,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGH,CAAH,wEAEM,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKa,MAAMjD,YAC5C,SAAA9B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKa,MAAMhD,UACxC,SAAA/B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKa,MAAM/C,YAC/C,SAAAhC,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKa,MAAMC,SAGhDC,EAAY7E,YAAOS,KAAVR,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGH,CAAH,kCACJ,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKa,MAAMtE,OAExC,SAAAT,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKa,MAAMpE,MAAMF,QAIvDyE,EAAO9E,IAAO+E,EAAV9E,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGH,CAAH,oFACO,SAAAJ,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKkB,KAAKtD,YAC3C,SAAA9B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKkB,KAAKrD,UAC7C,SAAA/B,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKkB,KAAK3E,OACxC,SAAAT,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKkB,KAAKJ,QACxC,SAAAhF,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKkB,KAAKV,SACrC,SAAA1E,GAAK,OAAIA,EAAMQ,MAAMoB,KAAKqC,KAAKC,KAAKkB,KAAKpD,aAGpDqD,EAAQjF,IAAOkF,IAAVjF,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGH,CAAH,+CAMLmF,EAAQnF,YAAOoF,KAAVnF,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGH,CAAH,kBAqDIqF,EAhDE,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,KAAM9D,EAAyB6D,EAAzB7D,OAAQ0C,EAAiBmB,EAAjBnB,WAChC,OACExD,EAAAd,EAAAC,cAACwB,EAAD,CAAS6C,WAAYA,GACnBxD,EAAAd,EAAAC,cAAC4C,EAAA,EAAD,KACE/B,EAAAd,EAAAC,cAACW,EAAA,EAAD,CAAM+E,GAAID,EAAKE,OAAOC,MACpB/E,EAAAd,EAAAC,cAACqF,EAAD,CAAOQ,MAAOJ,EAAKK,YAAYC,MAAMC,gBAAgBH,UAGzDhF,EAAAd,EAAAC,cAAC4C,EAAA,EAAD,KACE/B,EAAAd,EAAAC,cAAC8D,EAAD,CAAenB,QAAS,EAAGsD,KAAM,YAC/BpF,EAAAd,EAAAC,cAACsE,EAAD,KACEzD,EAAAd,EAAAC,cAAC2E,EAAD,KACE9D,EAAAd,EAAAC,cAAC+E,EAAD,CAAWW,GAAID,EAAKE,OAAOC,MACxBH,EAAKK,YAAYjB,QAGtBhE,EAAAd,EAAAC,cAACgF,EAAD,KAAOS,EAAKS,UAEdrF,EAAAd,EAAAC,cAACyE,EAAD,KACE5D,EAAAd,EAAAC,cAACoC,EAAA,EAAD,CAAQT,OAAQA,EAAQV,KAAMwE,EAAKK,YAAY7E,OAC/CJ,EAAAd,EAAAC,cAACmF,EAAD,KACEtE,EAAAd,EAAAC,cAACW,EAAA,EAAD,CAAM+E,GAAID,EAAKE,OAAOC,MACpB/E,EAAAd,EAAAC,cAAA,OAAKiD,MAAM,KAAKC,OAAO,MAAKrC,EAAAd,EAAAC,cAAA,QAAMR,EAAE,wQAAwQ2G,SAAS,oBCxEtTC,IApBM,SAACtG,GACpB,OACEe,EAAAd,EAAAC,cAAA,WACEa,EAAAd,EAAAC,cAAC4C,EAAA,EAAD,CAAMD,QAAQ,qCAAqC0D,IAAI,OAAOC,aAAa,WACxExG,EAAMyG,MAAMC,IAAI,SAAAf,GAAI,OACnB5E,EAAAd,EAAAC,cAAC4C,EAAA,EAAD,CAAM6D,IAAKhB,EAAKE,OAAOC,MACrB/E,EAAAd,EAAAC,cAAC0G,EAAD5F,OAAAC,OAAA,CAAU0E,KAAMA,GAAU3F,4CCXtC,IAAAJ,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAiH,EAAAtH,EAAA,KAAAuH,EAAAvH,EAAA,KAAAwH,EAAAxH,EAAAO,EAAAgH,GAAAE,EAAAzH,EAAA,KAAA0H,EAAA1H,EAAA,KAAA2H,EAAA3H,EAAA,KAQMmC,EAAUtB,IAAO+G,QAAV9G,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGH,CAAH,4BACD,SAAAJ,GAAK,OAAIA,EAAMQ,MAAM4G,KAAKpC,QACzB,SAAAhF,GAAK,OAAIA,EAAMQ,MAAM4G,KAAK1C,UAGjC2C,EAASjH,IAAOkH,OAAVjH,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGH,CAAH,0EACK,SAAAJ,GAAK,OAAIA,EAAMQ,MAAM4G,KAAKE,OAAOxF,YAEtC,SAAA9B,GAAK,OAAIA,EAAMQ,MAAM4G,KAAKE,OAAOtC,SAGvCuC,EAAKnH,IAAOoH,GAAVnH,WAAA,CAAAC,YAAA,WAAAC,YAAA,gBAAGH,CAAH,uIACO,SAAAJ,GAAK,OAAIA,EAAMQ,MAAM4G,KAAKE,OAAOvF,UAK1B,SAAAQ,GAAA,OAAAA,EAAG/B,MAAkBoE,MAAM,OAoClC6C,IA/BF,SAACzH,GAAU,IACd6B,EAAW7B,EAAM0H,KAAKC,KAAKC,aAA3B/F,OACR,OACEhC,EAAAI,EAAAC,cAAC+G,EAAA,EAAD,CAAQY,SAAU7H,EAAM6H,UACtBhI,EAAAI,EAAAC,cAACwB,EAAD,KACE7B,EAAAI,EAAAC,cAAC8G,EAAA,EAAD,CAAkBc,GAAG,SAClB,SAACC,GAAD,OACClI,EAAAI,EAAAC,cAACmH,EAAD,KACExH,EAAAI,EAAAC,cAAC6G,EAAA9G,EAAD,CACE8E,MAAOgD,EACPC,KAAM,CAAC,CAAE9E,KAAM,cAAe+E,QAASF,MAEzClI,EAAAI,EAAAC,cAACqH,EAAD,KACE1H,EAAAI,EAAAC,cAAA,YAAO6H,OAKflI,EAAAI,EAAAC,cAAC2G,EAAA,EAAD,CACEJ,MAAOzG,EAAM0H,KAAKQ,kBAAkBC,MAAMzB,IAAI,SAAAvB,GAAC,OAAIA,EAAEiD,OAAOvG,OAAQA,EAAQ0C,YAAU","file":"component---src-pages-blog-index-pt-js-cbf9d6a3c50f2bf21ae4.js","sourcesContent":["import React from 'react';\nimport Blog from '../../components/pages/Blog';\nimport { graphql } from 'gatsby';\n\nexport default (props) => <Blog {...props} />;\n\nexport const pageQuery = graphql`\n  query BlogPtQuery {\n    site {\n      siteMetadata {\n        author {\n          name\n          homeCity\n          email\n          defaultLink\n        }\n      }\n    },\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true } },\n        fields: { langKey: { regex: \"/(pt|any)/\" } }\n      },\n    ) {\n      edges {\n        node{\n          frontmatter{\n            title,\n            tags,\n            date,\n            image {\n              childImageSharp{\n                  sizes(maxWidth: 750) {\n                      ...GatsbyImageSharpSizes\n                  }\n              }\n            }\n          },\n          fields{\n            slug,\n            langKey,\n            tagSlugs{\n              tag,\n              link\n            }\n          },\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst A = styled.a`\n    color: ${props => props.theme.a.color};\n    text-decoration: ${props => props.theme.a.textDecoration};\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover {\n        color: ${props => props.theme.a.hover.color};\n        transition: 0.3s;\n    }\n`;\n\nexport default A;\n","import { Link } from 'gatsby';\nimport A from './A';\n\nexport default A.withComponent(Link);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Time from '../components/Time';\nimport { formatReadingTime } from '../utils/helpers'\n\nconst Wrapper = styled(Grid)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n`;\n\nconst Date = styled.span`\n  color: ${props => props.theme.blog.author.time.color};\n  display: block;\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst FollowButton = styled.a`\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  height: 19px;\n  padding: 0 10px;\n  color: rgba(0,0,0,.84);\n  border: 1px solid rgba(0,0,0,.68);\n  border-radius: 4px;\n  user-select: none!important;\n  margin: 0 14px 4px;\n  span {\n    font-size: 13px;\n    line-height: 19px;\n    padding-bottom: 2px;\n  }\n`;\n\nconst PostAuthor = ({ author, className, date, showFollow, timeToRead }) => {\n  return (\n    <Wrapper columns={'50px 1fr'} className={className}>\n      <Cell middle>\n        <ProfilePicture email={author.email} alt={author.name} width={42} height={42} />\n      </Cell>\n      <Cell middle>\n        <span>\n          {author.name}\n          { showFollow \n            ? <FollowButton href={`http://twitter.com/${author.twitter}`} target=\"_blank\">\n              <span>Follow</span>\n            </FollowButton> \n            : null }\n        </span>\n        <Date>\n          <Time\n            pubdate=\"pubdate\"\n            date={date}\n          />{timeToRead && ` • ${formatReadingTime(timeToRead)}`}\n        </Date>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostAuthor.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  showFollow: PropTypes.bool,\n  timeToRead: PropTypes.number\n};\n\nexport default PostAuthor;\n","export const formatReadingTime = (minutes) => {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './Link';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Img from 'gatsby-image';\nimport Author from './PostAuthor';\nimport { media } from '../constants/responsive';\n\n\nconst GridContainer = styled(Grid)`\n  height: 100%;\n`;\n\nconst Wrapper = styled(GridContainer)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  grid-template-rows: repeat(1,1fr);\n  grid-template-columns: 3fr 5fr;\n  ${media.md`\n    ${props => props.imageOnTop\n    ? ` grid-template-rows: repeat(2,1fr);\n        grid-template-columns: 1fr;`\n    : ''};\n  `}\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  padding: ${({ theme }) => `${theme.scale(-1.5)} ${theme.scale(1.2)} ${theme.scale(0)}`};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n  height: auto;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst Label = styled.div`\n  position: absolute;\n  right: 18px;\n  bottom: 18px;\n`;\n\nconst Image = styled(Img)`\n  height: 100%;\n`;\n\n\nconst PostCard = ({ post, author, imageOnTop }) => {\n  return (\n    <Wrapper imageOnTop={imageOnTop}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Image sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Cell>\n        <GridContainer columns={1} rows={'1fr auto'}>\n          <Body>\n            <Title>\n              <TitleLink to={post.fields.slug}>\n                {post.frontmatter.title}\n              </TitleLink>\n            </Title>\n            <Text>{post.excerpt}</Text>\n          </Body>\n          <Footer>\n            <Author author={author} date={post.frontmatter.date} />\n            <Label>\n              <Link to={post.fields.slug}>\n                <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n              </Link>\n            </Label>\n          </Footer>\n        </GridContainer>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from './PostCard';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst PostCardList = (props) => {\n  return (\n    <nav>\n      <Grid columns=\"repeat(auto-fit,minmax(260px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <PostCard post={post} {...props} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostCardList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCardList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCardList from '../PostCardList';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport Layout from '../layout';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  margin: ${props => props.theme.page.margin};\n  padding: ${props => props.theme.page.padding};\n`;\n\nconst Header = styled.header`\n  font-family: ${props => props.theme.page.header.fontFamily};\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  margin: ${props => props.theme.page.header.margin};\n`;\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.page.header.fontSize};\n  padding: 0;\n  span {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.44);\n    display: inline-block;\n    padding-bottom: ${({ theme }) => theme.scale(3.5)};\n    margin-bottom: -1px;\n  }\n`;\n\nconst Blog = (props) => {\n  const { author } = props.data.site.siteMetadata;\n  return (\n    <Layout location={props.location}>\n      <Wrapper>\n        <FormattedMessage id=\"posts\">\n          {(txt) => (\n            <Header>\n              <Helmet\n                title={txt}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                <span>{txt}</span>\n              </H1>\n            </Header>\n          )}\n        </FormattedMessage>\n        <PostCardList\n          posts={props.data.allMarkdownRemark.edges.map(p => p.node)} author={author} imageOnTop\n        />\n      </Wrapper>\n    </Layout>\n  );\n};\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default Blog;\n"],"sourceRoot":""}