{"version":3,"sources":["webpack:///./src/pages/tags/index.en.js","webpack:///./src/components/A.js","webpack:///./src/components/Link.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/toString.js","webpack:///./src/components/pages/Tags.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_pages_Tags__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","A","styled","withConfig","displayName","componentId","theme","color","textDecoration","hover","withComponent","Link","Symbol","module","exports","baseToString","value","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Link__WEBPACK_IMPORTED_MODULE_2__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_3__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_3___default","styled_components__WEBPACK_IMPORTED_MODULE_4__","react_intl__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","_components_layout__WEBPACK_IMPORTED_MODULE_7__","Wrapper","section","page","margin","padding","Nav","nav","_ref","scale","_ref2","Li","li","_ref3","_ref4","Header","header","fontFamily","H1","h1","fontSize","_ref5","Tags","allTags","data","allMarkdownRemark","group","location","id","txt","title","meta","name","content","map","tag","key","fieldValue","style","to","kebabCase","totalCount","propTypes","PropTypes","object","pageContext","isRequired","createCompounder","result","word","index","toLowerCase","arrayReduce","deburr","words","reApos","RegExp","callback","string","replace","array","iteratee","accumulator","initAccum","length","deburrLetter","toString","reLatin","reComboMark","basePropertyOf","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","undefined","arrayMap","isArray","isSymbol","INFINITY","symbolProto","prototype","symbolToString","call","freeGlobal","freeSelf","self","Object","root","Function","global","Array","baseGetTag","isObjectLike","symbolTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","objectProto","hasOwnProperty","nativeObjectToString","isOwn","unmasked","e","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","match","reAsciiWord","reHasUnicodeWord","test","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord"],"mappings":"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AAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,MAaAhR,EAAAC,QAAA6E,qBCzDA9E,EAAAC,QANA,SAAAwD,GACA,gBAAAR,GACA,aAAAQ,OAAAwN,EAAAxN,EAAAR,0BCTA,IAAAlD,EAAavB,EAAQ,KACrB0S,EAAe1S,EAAQ,KACvB2S,EAAc3S,EAAQ,KACtB4S,EAAe5S,EAAQ,KAGvB6S,EAAA,IAGAC,EAAAvR,IAAAwR,eAAAN,EACAO,EAAAF,IAAAvM,cAAAkM,EA0BAjR,EAAAC,QAhBA,SAAAC,EAAAC,GAEA,oBAAAA,EACA,OAAAA,EAEA,GAAAgR,EAAAhR,GAEA,OAAA+Q,EAAA/Q,EAAAD,GAAA,GAEA,GAAAkR,EAAAjR,GACA,OAAAqR,IAAAC,KAAAtR,GAAA,GAEA,IAAA0D,EAAA1D,EAAA,GACA,WAAA0D,GAAA,EAAA1D,IAAAkR,EAAA,KAAAxN,wBCjCA,IAAA6N,EAAiBlT,EAAQ,KAGzBmT,EAAA,iBAAAC,iBAAAC,iBAAAD,KAGAE,EAAAJ,GAAAC,GAAAI,SAAA,cAAAA,GAEA/R,EAAAC,QAAA6R,wBCRA,SAAAE,GACA,IAAAN,EAAA,iBAAAM,QAAAH,iBAAAG,EAEAhS,EAAAC,QAAAyR,wCCiBA1R,EAAAC,QAXA,SAAAwE,EAAAC,GAKA,IAJA,IAAAX,GAAA,EACAc,EAAA,MAAAJ,EAAA,EAAAA,EAAAI,OACAhB,EAAAoO,MAAApN,KAEAd,EAAAc,GACAhB,EAAAE,GAAAW,EAAAD,EAAAV,KAAAU,GAEA,OAAAZ,sBCMA,IAAAsN,EAAAc,MAAAd,QAEAnR,EAAAC,QAAAkR,uBCzBA,IAAAe,EAAiB1T,EAAQ,KACzB2T,EAAmB3T,EAAQ,KAG3B4T,EAAA,kBAwBApS,EAAAC,QALA,SAAAE,GACA,uBAAAA,GACAgS,EAAAhS,IAAA+R,EAAA/R,IAAAiS,wBCzBA,IAAArS,EAAavB,EAAQ,KACrB6T,EAAgB7T,EAAQ,KACxB8T,EAAqB9T,EAAQ,KAG7B+T,EAAA,gBACAC,EAAA,qBAGAC,EAAA1S,IAAA2S,iBAAAzB,EAkBAjR,EAAAC,QATA,SAAAE,GACA,aAAAA,OACA8Q,IAAA9Q,EAAAqS,EAAAD,EAEAE,QAAAZ,OAAA1R,GACAkS,EAAAlS,GACAmS,EAAAnS,yBCxBA,IAAAJ,EAAavB,EAAQ,KAGrBmU,EAAAd,OAAAN,UAGAqB,EAAAD,EAAAC,eAOAC,EAAAF,EAAA5N,SAGA0N,EAAA1S,IAAA2S,iBAAAzB,EA6BAjR,EAAAC,QApBA,SAAAE,GACA,IAAA2S,EAAAF,EAAAnB,KAAAtR,EAAAsS,GACAzP,EAAA7C,EAAAsS,GAEA,IACAtS,EAAAsS,QAAAxB,EACA,IAAA8B,GAAA,EACG,MAAAC,IAEH,IAAAnP,EAAAgP,EAAApB,KAAAtR,GAQA,OAPA4S,IACAD,EACA3S,EAAAsS,GAAAzP,SAEA7C,EAAAsS,IAGA5O,sBCzCA,IAOAgP,EAPAhB,OAAAN,UAOAxM,SAaA/E,EAAAC,QAJA,SAAAE,GACA,OAAA0S,EAAApB,KAAAtR,uBCUAH,EAAAC,QAJA,SAAAE,GACA,aAAAA,GAAA,iBAAAA,wBCzBA,IAAA8S,EAAiBzU,EAAQ,KACzB0U,EAAqB1U,EAAQ,KAC7BuG,EAAevG,EAAQ,KACvB2U,EAAmB3U,EAAQ,KA+B3BwB,EAAAC,QAVA,SAAAsE,EAAA6O,EAAAC,GAIA,OAHA9O,EAAAQ,EAAAR,QAGA0M,KAFAmC,EAAAC,OAAApC,EAAAmC,GAGAF,EAAA3O,GAAA4O,EAAA5O,GAAA0O,EAAA1O,GAEAA,EAAA+O,MAAAF,IAAA,uBC9BA,IAAAG,EAAA,4CAaAvT,EAAAC,QAJA,SAAAsE,GACA,OAAAA,EAAA+O,MAAAC,IAAA,uBCVA,IAAAC,EAAA,qEAaAxT,EAAAC,QAJA,SAAAsE,GACA,OAAAiP,EAAAC,KAAAlP,uBCVA,IAaAmP,EAAAC,8OAIAC,EAAA,IAAAF,EAAA,IAEAG,EAAA,OACAC,EAAA,oBACAC,EAAA,8BACAC,EAAA,oBAAAN,EAAAG,EAjBA,qEAqBAI,EAAA,kCACAC,EAAA,qCACAC,EAAA,8BAIAC,EAAA,MAAAL,EAAA,IAAAC,EAAA,IACAK,EAAA,MAAAF,EAAA,IAAAH,EAAA,IAGAM,EAAAC,gFAKAC,EAJA,oBAIAF,GAHA,iBAbA,qBAaAL,EAAAC,GAAAO,KAAA,0BAAAH,EAAA,MAIAI,EAAA,OAAAZ,EAAAG,EAAAC,GAAAO,KAAA,SAAAD,EAGAG,EAAAtQ,OAAA,CACA8P,EAAA,IAAAJ,EAAA,qCAAAH,EAAAO,EAAA,KAAAM,KAAA,SACAJ,EAAA,qCAAAT,EAAAO,EAAAC,EAAA,KAAAK,KAAA,SACAN,EAAA,IAAAC,EAAA,iCACAD,EAAA,iCATA,mDADA,mDAaAN,EACAa,GACAD,KAAA,UAaAzU,EAAAC,QAJA,SAAAsE,GACA,OAAAA,EAAA+O,MAAAqB,IAAA","file":"component---src-pages-tags-index-en-js-8c873f021f30e49f1740.js","sourcesContent":["import React from 'react';\nimport TagsPage from '../../components/pages/Tags';\nimport { graphql } from 'gatsby';\n\nexport default (props) => <TagsPage {...props} />;\n\nexport const pageQuery = graphql`\n  query TagsEnQuery {\n    allMarkdownRemark(\n      limit: 2000\n      filter: {\n        frontmatter: { draft: { ne: true } } ,\n        fields: {\n          langKey: {eq: \"en\"}\n        }\n      }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst A = styled.a`\n    color: ${props => props.theme.a.color};\n    text-decoration: ${props => props.theme.a.textDecoration};\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover {\n        color: ${props => props.theme.a.hover.color};\n        transition: 0.3s;\n    }\n`;\n\nexport default A;\n","import { Link } from 'gatsby';\nimport A from './A';\n\nexport default A.withComponent(Link);\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../../components/Link';\nimport kebabCase from 'lodash/kebabCase';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../../components/layout';\n\nconst Wrapper = styled.section`\n  margin: ${props => props.theme.page.margin};\n  padding: ${props => props.theme.page.padding};\n`;\n\nconst Nav = styled.nav`\n  margin-top: ${({ theme }) => theme.scale(-1)};\n  margin-bottom: ${({ theme }) => theme.scale(6)};\n  column-count: 2;\n\n  @media (min-width: 450px) {\n    column-count: 3;\n  }\n\n  @media (min-width: 650px) {\n    column-count: 4;\n  }\n`;\n\nconst Li = styled.li`\n  font-size: ${({ theme }) => theme.scale(1)};\n  padding: ${({ theme }) => theme.scale(-1)} 0;\n`;\n\nconst Header = styled.header`\n  font-family: ${props => props.theme.page.header.fontFamily};\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  margin: ${props => props.theme.page.header.margin};\n`;\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.page.header.fontSize};\n  padding: 0;\n  span {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.44);\n    display: inline-block;\n    padding-bottom: ${({ theme }) => theme.scale(3.5)};\n    margin-bottom: -1px;\n  }\n`;\n\nconst Tags = (props) => {\n  const allTags = props.data.allMarkdownRemark.group;\n\n  return (\n    <Layout location={props.location}>\n      <Wrapper>\n        <FormattedMessage id=\"tags\">\n          {(txt) => (\n            <Header>\n              <Helmet\n                title={txt}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                <span>{txt}</span>\n              </H1>\n            </Header>\n          )}\n        </FormattedMessage>\n        <Nav>\n          <ul>\n            {allTags.map(tag =>\n              <Li key={tag.fieldValue}>\n                <Link\n                  style={{\n                    textDecoration: 'none',\n                  }}\n                  to={`/tags/${kebabCase(tag.fieldValue)}/`}\n                >\n                  {tag.fieldValue} ({tag.totalCount})\n                </Link>\n              </Li>\n            )}\n          </ul>\n        </Nav>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  data: PropTypes.object,\n  pageContext: PropTypes.object,\n  location: PropTypes.object.isRequired,\n};\n\nexport default Tags;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n"],"sourceRoot":""}