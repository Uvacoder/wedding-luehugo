{"version":3,"sources":["webpack:///./src/pages/sobre/index.en.js","webpack:///./src/data/authors.js","webpack:///./src/structuredData.js","webpack:///./src/components/pages/Page.js"],"names":["i18n","titleId","content","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","description","__webpack_exports__","props","_components_pages_Page__WEBPACK_IMPORTED_MODULE_2__","Object","assign","authors","hugomn","name","additionalName","address","birthDate","birthPlace","brand","children","email","familyName","gender","givenName","height","homeLocation","jobTitle","knows","memberOf","nationality","owns","parent","performerIn","publishingPrinciples","relatedTo","seeks","sibling","spouse","telephone","weight","workLocation","worksFor","disambiguatingDescription","identifier","image","sameAs","url","module","exports","getAuthor","id","author","@type","filterObj","curry","fn","obj","isNilOrEmpty","keys","reduce","newObj","key","value","cleanStructuredData","v","isNotNilOrEmpty","renameType","addContext","structuredData","getDate","pipe","prop","getHeadline","getArticleBody","getLangKey","getStructuredData","markdownRemark","assocPath","JSON","stringify","getStructuredDataForAuthor","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_data_authors__WEBPACK_IMPORTED_MODULE_1__","_structuredData__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","react_intl__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","_layout__WEBPACK_IMPORTED_MODULE_6__","Wrapper","styled","article","withConfig","displayName","componentId","theme","page","margin","padding","maxWidth","Header","header","fontFamily","Content","section","p","fontSize","lineHeight","H1","h1","_ref","scale","Page","location","type","dangerouslySetInnerHTML","__html","title","meta"],"mappings":"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","file":"component---src-pages-sobre-index-en-js-7fc1200916bfd5aaf244.js","sourcesContent":["import React from \"react\";\nimport Page from \"../../components/pages/Page\";\n\nconst i18n = {\n  titleId: \"about\",\n  content: (\n    <>\n      <p>Hello!</p>\n      <p>Welcome to our wedding website</p>\n    </>\n  ),\n  description: `\n    Lunara and Hugo - 02/05/2020\n  `\n};\n\nexport default props => <Page i18n={i18n} {...props} />;\n","const authors = {\n  hugomn: {\n    name: 'Hugo Nogueira',\n    additionalName: 'hugomn',\n    address: 'Berlin CA',\n    birthDate: '1986-09-01',\n    birthPlace: 'Juiz de Fora BR',\n    brand: 'Hugo Nogueira, Software Engineer, Lead Front-end engineer, Senior ReactJs developer',\n    children: '...',\n    email: 'hugomn@gmail.com',\n    familyName: 'Nogueira',\n    gender: 'Male',\n    givenName: 'Hugo',\n    height: '...',\n    homeLocation: 'Berlin',\n    jobTitle: 'Software Engineering Lead',\n    knows: '...',\n    memberOf: '...',\n    nationality: 'Brazilian',\n    owns: '...',\n    parent: '...',\n    performerIn: '...',\n    publishingPrinciples: '...',\n    relatedTo: '...',\n    seeks: '...',\n    sibling: '...',\n    spouse: {\n      additionalName: 'Lunara Leto Costa',\n      name: 'Lunara Leto Costa',\n      givenName: 'Lunara',\n      familyName: 'Costa',\n      gender: 'Female',\n      nationality: 'Brazilian',\n      homeLocation: 'Berlin'\n    },\n    telephone: '...',\n    weight: '...',\n    workLocation: '...',\n    worksFor: '...',\n    description: '...',\n    disambiguatingDescription: '...',\n    identifier: '...',\n    image: 'http://www.gravatar.com/avatar/9174fca44b5ca403593ac9cb2407e0e7',\n    sameAs: 'https://hugomagalhaes.com/en/about/',\n    url: 'https://hugomagalhaes.com/en/about/'\n  }\n};\n\nconst getAuthor = (id) => {\n  const author = {\n    ...authors[id],\n    '@type': 'Person'\n  };\n  return author\n    ? author\n    : authors[0];\n};\n\nmodule.exports = {\n  authors,\n  getAuthor\n};\n","import { assocPath, curry, pipe, prop, keys } from 'ramda';\nimport { isNilOrEmpty, isNotNilOrEmpty } from 'ptz-fp';\nimport { getAuthor } from './data/authors';\n\nconst filterObj = curry((fn, obj) => {\n  if (isNilOrEmpty(obj)) return obj;\n\n  return keys(obj).reduce((newObj, key) => {\n    const value = obj[key];\n\n    if (typeof value === 'object') {\n      newObj[key] = filterObj(fn, obj[key]);\n    } else if (fn(value)) {\n      newObj[key] = obj[key];\n    }\n\n    return newObj;\n  }, {});\n});\n\n/**\n * Remove null fields and fields that has value equal to '...'\n * @param  {Object} structuredData google structured data\n * @return {Object}                clean structured data\n */\nconst cleanStructuredData = filterObj((v) => isNotNilOrEmpty(v) && v !== '...');\n\n/**\n * Rename props named 'type' to '@type'\n * @param  {Object} obj any object\n * @return {Object}     new object\n */\nconst renameType = (obj) => {\n  return keys(obj).reduce((newObj, key) => {\n    newObj[key === 'type' ? '@type' : key] = obj[key];\n    return newObj;\n  }, {});\n};\n\nconst addContext = (structuredData) => {\n  // Does it really needs to be immutable?\n  structuredData['@context'] = 'http://schema.org/';\n  return structuredData;\n};\n\nconst getDate = pipe(\n  prop('frontmatter'),\n  prop('date')\n);\n\nconst addDatePublished = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'datePublished'],\n    getDate(markdownRemark), markdownRemark);\n};\n\nconst getHeadline = pipe(\n  prop('frontmatter'),\n  prop('title')\n);\n\nconst addHeadline = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'headline'],\n    getHeadline(markdownRemark), markdownRemark);\n};\n\nconst getArticleBody = pipe(\n  prop('html')\n);\n\nconst addArticleBody = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'articleBody'],\n    getArticleBody(markdownRemark), markdownRemark);\n};\n\nconst addAuthor = (structuredData) => {\n  return structuredData.author\n    ? {\n      ...structuredData,\n      author: getAuthor(structuredData.author)\n    }\n    : structuredData;\n};\n\nconst getLangKey = pipe(\n  prop('frontmatter'),\n  prop('title')\n);\n\nconst addLanguage = (markdownRemark) => {\n  return assocPath(['fields', 'langKey'],\n    getLangKey(markdownRemark), markdownRemark);\n};\n\n/**\n *  Prepare structuredData from markdownRemark to google\n *  - get Structured Data from markdownRemark\n *  - remove empty fields\n *  - rename type to @type\n *  - parse to JSON\n *\n * @type {Object => String}\n */\nconst getStructuredData =\n  pipe(\n    addDatePublished,\n    addHeadline,\n    addArticleBody,\n    addLanguage,\n    prop('frontmatter'),\n    prop('structuredData'),\n    renameType,\n    addContext,\n    addAuthor,\n    cleanStructuredData,\n    JSON.stringify\n  );\n\nconst getStructuredDataForAuthor =\n  pipe(\n    renameType,\n    addContext,\n    cleanStructuredData,\n    JSON.stringify\n  );\n\nexport {\n  cleanStructuredData,\n  getStructuredData,\n  getStructuredDataForAuthor\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAuthor } from '../../data/authors';\nimport { getStructuredDataForAuthor } from '../../structuredData';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../layout';\n\nconst Wrapper = styled.article`\n  margin: ${props => props.theme.page.margin};\n  padding: ${props => props.theme.page.padding};\n  max-width: ${props => props.theme.page.maxWidth};\n`;\n\nconst Header = styled.header`\n  font-family: ${props => props.theme.page.header.fontFamily};\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  margin: ${props => props.theme.page.header.margin};\n`;\n\nconst Content = styled.section`\n  font-family: ${props => props.theme.page.content.fontFamily};\n  p {\n    margin: ${props => props.theme.page.content.p.margin};\n    padding: ${props => props.theme.page.content.p.padding};\n    font-size: ${props => props.theme.p.fontSize};\n    line-height: ${props => props.theme.p.lineHeight};\n  }\n`;\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.page.header.fontSize};\n  padding: 0;\n  span {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.44);\n    display: inline-block;\n    padding-bottom: ${({ theme }) => theme.scale(3.5)};\n    margin-bottom: -1px;\n  }\n`;\n\nconst Page = (props) => {\n  const author = getAuthor('hugomn');\n  author.description = props.i18n.description;\n  const structuredData = getStructuredDataForAuthor(author);\n\n  return (\n    <Layout location={props.location}>\n      <Wrapper>\n        <script\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{ __html: structuredData }}\n        />\n        <FormattedMessage id={props.i18n.titleId}>\n          {(title) => (\n            <Header>\n              <Helmet\n                title={title}\n                meta={[{ name: 'description', content: props.i18n.description }]}\n              />\n              <H1>\n                <span>{ title }</span>\n              </H1>\n            </Header>\n          )}\n        </FormattedMessage>\n        <Content>\n          { props.i18n.content }\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nPage.propTypes = {\n  i18n: PropTypes.shape({\n    titleId: PropTypes.string.isRequired,\n    content: PropTypes.object.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default Page;\n"],"sourceRoot":""}