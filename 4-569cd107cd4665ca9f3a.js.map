{"version":3,"sources":["webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curry2.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curry1.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curry3.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_dispatchable.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfBase.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_has.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/map.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/equals.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_concat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_arity.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/keys.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isArray.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/slice.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_contains.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/always.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/max.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pluck.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_checkForMethod.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/nth.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/invoker.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/path.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isPlaceholder.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/add.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_map.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isArrayLike.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/assoc.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/nAry.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isFunction.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lift.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/curry.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reverse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reject.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_containsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/flip.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lens.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepWithKey.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ptz-fp/dist/index.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isTransformer.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/prop.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/ap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isInteger.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/chain.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/type.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/compose.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/tail.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/concat.js","webpack:///./node_modules/core-js/modules/es6.date.to-iso-string.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/filter.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_filter.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isObject.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/update.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/take.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/identity.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_identity.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uniq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uniqWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_assign.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeWithKey.js","webpack:///./node_modules/ptz-fp/dist/isNilOrEmpty.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/index.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/adjust.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xwrap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/bind.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isArguments.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/and.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/any.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xany.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/apply.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/values.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/assocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/isNil.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/liftN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_makeFlat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_clone.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_cloneRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/not.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/composeK.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/identical.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_complement.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/constructN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/converge.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/defaultTo.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/difference.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/differenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dissoc.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/remove.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/drop.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/last.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/or.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/empty.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/takeLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uniqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/objOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/is.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/juxt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/length.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isNumber.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mean.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sum.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/memoizeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/multiply.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/over.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_createPartialApplicator.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pickAll.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/prepend.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/useWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduceRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/times.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sequence.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/where.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/F.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/T.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/__.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/addIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/all.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xall.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/allPass.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xmap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/anyPass.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xaperture.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/append.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/applySpec.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/ascend.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/binary.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/both.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/call.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xchain.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_flatCat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_forceReduced.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/clamp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/clone.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/comparator.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/complement.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/composeP.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_toString.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_equals.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_arrayFromIterator.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_functionName.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_quote.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_toISOString.js","webpack:///./node_modules/core-js/modules/_date-to-iso-string.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfilter.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/cond.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/construct.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/contains.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/countBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xreduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dec.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/descend.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dissocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/divide.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdrop.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xtake.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropRepeats.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/dropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xdropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/either.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/endsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/eqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/eqProps.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/evolve.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/find.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfind.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/findIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfindIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/findLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfindLast.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/findLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xfindLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/flatten.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/forEach.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/forEachObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/fromPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/groupBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/groupWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/gt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/gte.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/has.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/hasIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/head.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/ifElse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/inc.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/indexBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/init.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/innerJoin.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/insert.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/insertAll.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/intersection.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_Set.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/intersectionWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/intersperse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/into.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_stepCat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_objectAssign.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/invert.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/invertObj.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/isEmpty.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/join.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/keysIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lastIndexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lensIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lensPath.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lensProp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/lte.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mapAccum.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mapAccumRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mapObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/match.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mathMod.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/maxBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/median.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/memoize.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/merge.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeAll.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepLeft.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeDeepWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/mergeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/min.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/minBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/modulo.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/negate.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/none.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/nthArg.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/o.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/of.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_of.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/omit.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/once.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pair.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/partial.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/partialRight.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/partition.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pathEq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pathOr.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pathSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pick.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pickBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/pipeK.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/product.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/project.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propEq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propIs.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propOr.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/propSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/props.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/range.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduceWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/repeat.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/replace.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/scan.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/set.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sort.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sortBy.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/sortWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/split.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/splitAt.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/splitEvery.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/splitWhen.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/startsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/subtract.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/symmetricDifference.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/symmetricDifferenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/takeLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/takeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_xtakeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/tap.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/test.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/internal/_isRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toLower.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toPairsIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/toUpper.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/transduce.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/transpose.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/traverse.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/trim.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/tryCatch.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unapply.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unary.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/uncurryN.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unfold.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/union.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unionWith.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unless.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/unnest.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/until.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/valuesIn.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/view.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/when.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/whereEq.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/without.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/xprod.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/zip.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/zipObj.js","webpack:///./node_modules/ptz-fp/node_modules/ramda/src/zipWith.js","webpack:///./node_modules/ptz-fp/dist/isNotNilOrEmpty.js","webpack:///./node_modules/ptz-fp/dist/log.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/dist/index.js","webpack:///./node_modules/json-stringify-safe/stringify.js","webpack:///./node_modules/moment/moment.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/modules/es6.object.is-frozen.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/always.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/F.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/T.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/__.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/add.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/curryN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/addIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/adjust.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xall.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/all.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/max.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/bind.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/keys.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/map.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/path.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/prop.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pluck.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduce.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/allPass.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/and.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xany.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/any.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/anyPass.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/ap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/aperture.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/append.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/apply.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/values.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/applySpec.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/applyTo.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/ascend.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/assoc.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/isNil.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/nAry.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/binary.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/liftN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lift.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/both.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/curry.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/call.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_makeFlat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_flatCat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_forceReduced.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/chain.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xchain.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/clamp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_cloneRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/type.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_clone.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/clone.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/comparator.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/not.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/complement.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/slice.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/tail.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pipe.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reverse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/compose.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/composeK.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pipeP.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/composeP.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/identical.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/equals.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/filter.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reject.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/concat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/cond.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/constructN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/construct.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/contains.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/converge.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/countBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dec.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/defaultTo.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/descend.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/difference.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/differenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dissoc.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/remove.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/update.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dissocPath.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/divide.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdrop.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/drop.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xtake.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/take.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/nth.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/last.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropRepeatsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropRepeats.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xdropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/dropWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/or.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/either.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/empty.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/takeLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/endsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/eqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/eqProps.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/evolve.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfind.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/find.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/findIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfindLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/findLast.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/findLastIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/flatten.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/flip.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/forEach.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/forEachObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/fromPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/groupBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/groupWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/gt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/gte.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/has.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/hasIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/head.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/identity.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/ifElse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/inc.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/indexBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/indexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/init.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/innerJoin.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/insert.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/insertAll.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_Set.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uniqBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uniq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/intersection.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/intersperse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/objOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/into.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/invert.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/invertObj.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/invoker.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/is.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/isEmpty.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/join.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/juxt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/keysIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lastIndexOf.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isNumber.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/length.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lens.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lensIndex.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lensPath.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lensProp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/lte.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mapAccum.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mapAccumRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mapObjIndexed.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/match.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mathMod.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/maxBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sum.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mean.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/median.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/memoizeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/memoize.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/merge.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeAll.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeWithKey.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepWithKey.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepLeft.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeDeepWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/mergeWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/min.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/minBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/modulo.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/multiply.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/negate.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/none.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/nthArg.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/o.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_of.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/of.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/omit.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/once.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/over.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pair.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_createPartialApplicator.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/partial.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/partialRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/partition.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pathEq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pathOr.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pathSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pick.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pickAll.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pickBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/pipeK.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/prepend.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/product.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/useWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/project.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propEq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propIs.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propOr.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/propSatisfies.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/props.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/range.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduceRight.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduceWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/reduced.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/times.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/repeat.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/replace.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/scan.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sequence.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/set.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sort.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sortBy.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/sortWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/split.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/splitAt.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/splitEvery.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/splitWhen.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/startsWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/subtract.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/symmetricDifference.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/symmetricDifferenceWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/takeLastWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xtakeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/takeWhile.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_xtap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/tap.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/test.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/internal/_isRegExp.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toLower.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toPairs.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toPairsIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/toUpper.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/transduce.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/transpose.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/traverse.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/trim.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/tryCatch.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unapply.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unary.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uncurryN.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unfold.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/union.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/uniqWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unionWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unless.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/unnest.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/until.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/valuesIn.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/view.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/when.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/where.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/whereEq.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/without.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/xprod.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/zip.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/zipObj.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/zipWith.js","webpack:///./node_modules/ptz-fp/node_modules/ptz-log/node_modules/ramda/es/index.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/assoc.js","webpack:///./node_modules/ramda/es/isNil.js","webpack:///./node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ramda/es/curryN.js","webpack:///./node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ramda/es/curry.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/prop.js"],"names":["_curry1","__webpack_require__","_isPlaceholder","module","exports","fn","f2","a","b","arguments","length","_b","_a","f1","apply","this","_curry2","f3","c","_c","_isArray","_isTransformer","methodNames","xf","args","Array","prototype","slice","call","obj","pop","idx","transducer","init","result","_result","_arity","_curryN","prop","Object","hasOwnProperty","_dispatchable","_map","_reduce","_xmap","curryN","keys","functor","toString","acc","key","_isArrayLike","_xwrap","bind","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","list","len","_arrayReduce","reduce","TypeError","_equals","set1","set2","len1","len2","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","_has","_isArguments","propertyIsEnumerable","item","nIdx","ks","checkArgsLength","_curry3","isArray","val","x","@@transducer/value","@@transducer/reduced","_checkForMethod","fromIndex","toIndex","_indexOf","map","p","methodname","_toString","_isString","offset","charAt","_isFunction","arity","method","target","paths","Number","received","combined","argsIdx","left","combinedIdx","nodeType","liftN","split","reverse","join","_complement","filter","pred","filterable","_xreduceBy","valueFn","valueAcc","keyFn","elt","curry","getter","setter","toFunctorFn","focus","_isObject","mergeWithKey","mergeDeepWithKey","lObj","rObj","k","lVal","rVal","d","__webpack_exports__","defineProperty","_isNilOrEmpty","forEach","enumerable","get","_isNotNilOrEmpty","_log","_concat","applyF","applyX","ap","f","isInteger","$export","S","_makeFlat","_xchain","monad","undefined","pipe","Infinity","concat","toISOString","P","F","Date","_filter","_xfilter","adjust","always","_xtake","xs","_identity","identity","uniqBy","_containsWith","_objectAssign","assign","l","r","isNilOrEmpty","_ramda","_ramda2","__esModule","default","anyPass","isNil","isEmpty","T","__","add","addIndex","all","allPass","and","any","aperture","append","applySpec","ascend","assoc","assocPath","binary","both","chain","clamp","clone","comparator","complement","compose","composeK","composeP","cond","construct","constructN","converge","countBy","dec","defaultTo","descend","difference","differenceWith","dissoc","dissocPath","divide","drop","dropLast","dropLastWhile","dropRepeats","dropRepeatsWith","dropWhile","either","empty","endsWith","eqBy","eqProps","equals","evolve","find","findIndex","findLast","findLastIndex","flatten","flip","forEachObjIndexed","fromPairs","groupBy","groupWith","gt","gte","has","hasIn","head","identical","ifElse","inc","indexBy","indexOf","innerJoin","insert","insertAll","intersection","intersectionWith","intersperse","into","invert","invertObj","invoker","is","juxt","keysIn","last","lastIndexOf","lens","lensIndex","lensPath","lensProp","lift","lt","lte","mapAccum","mapAccumRight","mapObjIndexed","match","mathMod","max","maxBy","mean","median","memoize","memoizeWith","merge","mergeAll","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","min","minBy","modulo","multiply","nAry","negate","none","not","nth","nthArg","o","objOf","of","omit","once","or","over","pair","partial","partialRight","partition","path","pathEq","pathOr","pathSatisfies","pick","pickAll","pickBy","pipeK","pipeP","pluck","prepend","product","project","propEq","propIs","propOr","propSatisfies","props","range","reduceBy","reduceRight","reduceWhile","reduced","reject","remove","repeat","replace","scan","sequence","set","sort","sortBy","sortWith","splitAt","splitEvery","splitWhen","startsWith","subtract","sum","symmetricDifference","symmetricDifferenceWith","tail","take","takeLast","takeLastWhile","takeWhile","tap","test","times","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","traverse","trim","tryCatch","type","unapply","unary","uncurryN","unfold","union","unionWith","uniq","uniqWith","unless","unnest","until","update","useWith","values","valuesIn","view","when","where","whereEq","without","xprod","zip","zipObj","zipWith","_idx","_list","XWrap","thisObj","_xany","_reduced","_xfBase","XAny","input","vals","_isInteger","nextObj","arr","lifted","recursive","flatt","jlen","j","ilen","_cloneRegExp","_clone","refFrom","refTo","deep","copy","copiedValue","valueOf","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_pipe","_pipeP","inf","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","after","fns","context","v","_contains","first","second","out","firstLen","push","start","count","splice","_xdrop","Math","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropRepeatsWith","constructor","_Set","appliedItem","Ctor","_isNumber","NaN","mFn","cache","y","Identity","names","name","el","transformers","isNaN","RangeError","traversable","spec","testObj","@@functional/placeholder","origFn","_xall","XAll","preds","XMap","_aperture","_xaperture","limit","XAperture","pos","full","store","getCopy","aa","bb","isObject","floor","it","isFinite","g","_flatCat","_forceReduced","rxf","@@transducer/init","@@transducer/result","@@transducer/step","ret","preservingReduced","ctx","then","_quote","_toISOString","seen","recur","mapPairs","repr","_arrayFromIterator","_functionName","stackA","stackB","message","entries","keysA","String","s","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","fails","getTime","$toISOString","lz","num","m","abs","XFilter","pairs","elem","XReduceBy","inputs","XDrop","_dropLast","_xdropLast","XTake","i","XDropLast","_dropLastWhile","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_xdropWhile","XDropWhile","suffix","obj1","obj2","transformations","object","transformation","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","_xfindLastIndex","XFindLastIndex","lastIdx","keyList","res","nextidx","condition","onTrue","onFalse","ys","elts","list1","list2","lookupList","filteredList","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","size","bIdx","results","separator","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","_assign","output","nextKey","tuple","rx","str","width","_","_l","_r","_of","called","fst","snd","_createPartialApplicator","_path","propPath","ps","from","to","regex","replacement","index","array","prefix","_xtakeWhile","XTakeWhile","_isRegExp","outerlist","innerlist","ws","beginRx","endRx","tryer","catcher","e","depth","endIdx","currentDepth","seed","whenFalseFn","vs","Const","fantasy-land/map","whenTrueFn","rv","isNotNilOrEmpty","log","_ptzLog","_len","_key","logInOut","_jsonStringifySafe2","_interopRequireDefault","_moment2","logColors","reset","bright","dim","underscore","blink","hidden","black","red","green","yellow","blue","magenta","cyan","white","render","txt","arg","ptzLogColor","console","format","flog","_len2","_key2","serializer","replacer","cycleReplacer","stack","thisPos","spaces","JSON","stringify","getSerialize","hookCallback","some","hooks","isUndefined","isNumber","isDate","hasOwnProp","extend","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","_d","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","t","momentProperties","copyConfig","_isAMomentObject","_i","_f","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","absFloor","number","ceil","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","mom","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","parseTwoDigitYear","parseInt","getSetYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","data","getLocale","defineLocale","abbr","_config","parentLocale","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","meridiemHour","isPm","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","other","prototypeMax","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","diffRes","base","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","monthDiff","anchor2","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","keepOffset","inspect","zone","isLocal","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","webpackPolyfill","children","$isFrozen","es_always","es_F","es_T","es_add","es_curryN","es_addIndex","es_adjust","_xall_XAll","es_all","es_max","internal_isArrayLike","es_bind","_xmap_XMap","internal_xmap","_isArguments_toString","internal_isArguments","es_keys","es_map","es_path","es_prop","es_pluck","es_reduce","es_allPass","es_and","_xany_XAny","internal_xany","es_any","es_anyPass","es_ap","_xaperture_XAperture","es_aperture","es_append","es_apply","es_values","es_applySpec","es_applyTo","es_ascend","es_assoc","es_isNil","es_assocPath","es_nAry","es_binary","es_liftN","es_lift","es_both","es_curry","es_call","internal_flatCat","_flatCat_preservingReduced","es_chain","es_clamp","es_type","es_clone","es_comparator","es_not","es_complement","es_slice","es_tail","es_reverse","es_identical","_uniqContentEquals","aIterator","bIterator","eq","aItem","typeA","extendedStackA","extendedStackB","es_equals","internal_toISOString","_xfilter_XFilter","es_filter","es_reject","es_toString","es_concat","es_cond","es_constructN","es_construct","es_contains","es_converge","_xreduceBy_XReduceBy","es_reduceBy","es_countBy","es_dec","es_defaultTo","es_descend","es_difference","es_differenceWith","es_dissoc","es_remove","es_update","es_dissocPath","es_divide","_xdrop_XDrop","es_drop","_xtake_XTake","es_take","_xdropLast_XDropLast","es_dropLast","_xdropLastWhile_XDropLastWhile","es_dropLastWhile","_xdropRepeatsWith_XDropRepeatsWith","internal_xdropRepeatsWith","es_nth","es_last","es_dropRepeatsWith","es_dropRepeats","_xdropWhile_XDropWhile","es_dropWhile","es_or","es_either","es_empty","es_takeLast","es_endsWith","es_eqBy","es_eqProps","es_evolve","_xfind_XFind","es_find","_xfindIndex_XFindIndex","es_findIndex","_xfindLast_XFindLast","es_findLast","_xfindLastIndex_XFindLastIndex","es_findLastIndex","es_flatten","es_flip","es_forEach","es_forEachObjIndexed","es_fromPairs","es_groupBy","es_groupWith","es_gt","es_gte","es_has","es_hasIn","es_head","es_identity","es_ifElse","es_inc","es_indexBy","es_indexOf","es_init","es_innerJoin","es_insert","es_insertAll","internal_Set","es_uniqBy","es_uniq","es_intersection","es_intersperse","es_objOf","es_into","es_invert","es_invertObj","es_invoker","es_is","es_isEmpty","es_join","es_juxt","es_keysIn","es_lastIndexOf","es_length","es_lens","es_lensIndex","es_lensPath","es_lensProp","es_lt","es_lte","es_mapAccum","es_mapAccumRight","es_mapObjIndexed","es_match","es_mathMod","es_maxBy","es_sum","es_mean","es_median","es_memoizeWith","es_memoize","es_merge","es_mergeAll","es_mergeWithKey","es_mergeDeepWithKey","es_mergeDeepLeft","es_mergeDeepRight","es_mergeDeepWith","es_mergeWith","es_min","es_minBy","es_modulo","es_multiply","es_negate","es_none","es_nthArg","es_o","es_of","es_omit","es_once","es_over","es_pair","es_partial","es_partialRight","es_partition","es_pathEq","es_pathOr","es_pathSatisfies","es_pick","es_pickAll","es_pickBy","es_prepend","es_product","es_useWith","es_project","es_propEq","es_propIs","es_propOr","es_propSatisfies","es_props","es_range","es_reduceRight","es_reduceWhile","es_reduced","es_times","es_repeat","es_replace","es_scan","es_sequence","es_set","es_sort","es_sortBy","es_sortWith","es_split","es_splitAt","es_splitEvery","es_splitWhen","es_startsWith","es_subtract","es_symmetricDifference","es_symmetricDifferenceWith","es_takeLastWhile","_xtakeWhile_XTakeWhile","es_takeWhile","_xtap_XTap","XTap","es_tap","es_test","es_toLower","es_toPairs","es_toPairsIn","es_toUpper","es_transduce","es_transpose","es_traverse","es_trim","es_tryCatch","es_unapply","es_unary","es_uncurryN","es_unfold","es_union","es_uniqWith","es_unionWith","es_unless","es_unnest","es_until","es_valuesIn","es_view","es_when","es_where","es_whereEq","es_without","es_xprod","es_zip","es_zipObj","es_zipWith","assocPath_assocPath","curry_curry","prop_prop"],"mappings":"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","file":"4-569cd107cd4665ca9f3a.js","sourcesContent":["var _curry1 = require('./_curry1');\n\nvar _isPlaceholder = require('./_isPlaceholder');\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n};","var _isPlaceholder = require('./_isPlaceholder');\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};","var _curry1 = require('./_curry1');\n\nvar _curry2 = require('./_curry2');\n\nvar _isPlaceholder = require('./_isPlaceholder');\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n};","var _isArray = require('./_isArray');\n\nvar _isTransformer = require('./_isTransformer');\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n};","module.exports = {\n  init: function init() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function result(_result) {\n    return this.xf['@@transducer/result'](_result);\n  }\n};","var _arity = require('./internal/_arity');\n\nvar _curry1 = require('./internal/_curry1');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _curryN = require('./internal/_curryN');\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _map = require('./internal/_map');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _xmap = require('./internal/_xmap');\n\nvar curryN = require('./curryN');\n\nvar keys = require('./keys');\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));","require(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _isArrayLike = require('./_isArrayLike');\n\nvar _xwrap = require('./_xwrap');\n\nvar bind = require('../bind');\n\nmodule.exports = function () {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n\n      idx += 1;\n    }\n\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n\n      step = iter.next();\n    }\n\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n\n    if (_isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _equals = require('./internal/_equals');\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n};","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _curry1 = require('./internal/_curry1');\n\nvar _has = require('./internal/_has');\n\nvar _isArguments = require('./internal/_isArguments');\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nmodule.exports = function () {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !{\n    toString: null\n  }.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\n  var hasArgsEnumBug = function () {\n    'use strict';\n\n    return arguments.propertyIsEnumerable('length');\n  }();\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n    return Object(obj) !== obj ? [] : Object.keys(obj);\n  }) : _curry1(function keys(obj) {\n    if (Object(obj) !== obj) {\n      return [];\n    }\n\n    var prop, nIdx;\n    var ks = [];\n\n    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n    for (prop in obj) {\n      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n        ks[ks.length] = prop;\n      }\n    }\n\n    if (hasEnumBug) {\n      nIdx = nonEnumerableProps.length - 1;\n\n      while (nIdx >= 0) {\n        prop = nonEnumerableProps[nIdx];\n\n        if (_has(prop, obj) && !contains(ks, prop)) {\n          ks[ks.length] = prop;\n        }\n\n        nIdx -= 1;\n      }\n    }\n\n    return ks;\n  });\n}();","var _curry3 = require('./internal/_curry3');\n\nvar _reduce = require('./internal/_reduce');\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nmodule.exports = _curry3(_reduce);","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\n/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};","var _checkForMethod = require('./internal/_checkForMethod');\n\nvar _curry3 = require('./internal/_curry3');\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));","var _indexOf = require('./_indexOf');\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};","var _curry1 = require('./internal/_curry1');\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nmodule.exports = _curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nmodule.exports = _curry2(function max(a, b) {\n  return b > a ? b : a;\n});","var _curry2 = require('./internal/_curry2');\n\nvar map = require('./map');\n\nvar prop = require('./prop');\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nmodule.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};","var _isArray = require('./_isArray');\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};","var _curry1 = require('./internal/_curry1');\n\nvar _toString = require('./internal/_toString');\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nmodule.exports = _curry1(function toString(val) {\n  return _toString(val, []);\n});","var _curry2 = require('./internal/_curry2');\n\nvar _isString = require('./internal/_isString');\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});","var _curry2 = require('./internal/_curry2');\n\nvar _isFunction = require('./internal/_isFunction');\n\nvar curryN = require('./curryN');\n\nvar toString = require('./toString');\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\n\nmodule.exports = _curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});","module.exports = function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n};","require(\"core-js/modules/es6.number.constructor\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\n\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});","var _arity = require('./_arity');\n\nvar _isPlaceholder = require('./_isPlaceholder');\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nmodule.exports = function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n};","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n};","var _curry1 = require('./_curry1');\n\nvar _isArray = require('./_isArray');\n\nvar _isString = require('./_isString');\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\n\nmodule.exports = _curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nmodule.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};","var _curry1 = require('./internal/_curry1');\n\nvar liftN = require('./liftN');\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\n\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});","var _curry1 = require('./internal/_curry1');\n\nvar curryN = require('./curryN');\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});","require(\"core-js/modules/es6.regexp.split\");\n\nvar _curry1 = require('./internal/_curry1');\n\nvar _isString = require('./internal/_isString');\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\n\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});","var _complement = require('./internal/_complement');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar filter = require('./filter');\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});","var _curryN = require('./internal/_curryN');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _has = require('./internal/_has');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _xreduceBy = require('./internal/_xreduceBy');\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\n\n\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));","module.exports = function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};","var _curry1 = require('./internal/_curry1');\n\nvar curry = require('./curry');\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nmodule.exports = _curry1(function flip(fn) {\n  return curry(function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});","var _curry2 = require('./internal/_curry2');\n\nvar map = require('./map');\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\n\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});","var _curry3 = require('./internal/_curry3');\n\nvar _isObject = require('./internal/_isObject');\n\nvar mergeWithKey = require('./mergeWithKey');\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nmodule.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","'use strict';\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNilOrEmpty = require('./isNilOrEmpty');\n\nObject.keys(_isNilOrEmpty).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _isNilOrEmpty[key];\n    }\n  });\n});\n\nvar _isNotNilOrEmpty = require('./isNotNilOrEmpty');\n\nObject.keys(_isNotNilOrEmpty).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _isNotNilOrEmpty[key];\n    }\n  });\n});\n\nvar _log = require('./log');\n\nObject.keys(_log).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _log[key];\n    }\n  });\n});","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\n\nmodule.exports = _curry2(function prop(p, obj) {\n  return obj[p];\n});","var _concat = require('./internal/_concat');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _reduce = require('./internal/_reduce');\n\nvar map = require('./map');\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\n\nmodule.exports = _curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});","require(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.number.is-integer\");\n\n/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _makeFlat = require('./internal/_makeFlat');\n\nvar _xchain = require('./internal/_xchain');\n\nvar map = require('./map');\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\n\nmodule.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar _curry1 = require('./internal/_curry1');\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n */\n\n\nmodule.exports = _curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});","var pipe = require('./pipe');\n\nvar reverse = require('./reverse');\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\n\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n};","var _checkForMethod = require('./internal/_checkForMethod');\n\nvar _curry1 = require('./internal/_curry1');\n\nvar slice = require('./slice');\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\n\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));","var _curry2 = require('./internal/_curry2');\n\nvar _isArray = require('./internal/_isArray');\n\nvar _isFunction = require('./internal/_isFunction');\n\nvar _isString = require('./internal/_isString');\n\nvar toString = require('./toString');\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\n\nmodule.exports = _curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});","// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar $export = require('./_export');\nvar toISOString = require('./_date-to-iso-string');\n\n// PhantomJS / old WebKit has a broken implementations\n$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {\n  toISOString: toISOString\n});\n","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _filter = require('./internal/_filter');\n\nvar _isObject = require('./internal/_isObject');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _xfilter = require('./internal/_xfilter');\n\nvar keys = require('./keys');\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n};","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nmodule.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};","var _curry3 = require('./internal/_curry3');\n\nvar adjust = require('./adjust');\n\nvar always = require('./always');\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\n\nmodule.exports = _curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xtake = require('./internal/_xtake');\n\nvar slice = require('./slice');\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));","var _curry1 = require('./internal/_curry1');\n\nvar _identity = require('./internal/_identity');\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nmodule.exports = _curry1(_identity);","module.exports = function _identity(x) {\n  return x;\n};","var identity = require('./identity');\n\nvar uniqBy = require('./uniqBy');\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\n\nmodule.exports = uniqBy(identity);","var _containsWith = require('./internal/_containsWith');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nmodule.exports = _curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});","require(\"core-js/modules/es6.object.assign\");\n\nvar _objectAssign = require('./_objectAssign');\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _curry3 = require('./internal/_curry3');\n\nvar _has = require('./internal/_has');\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});","'use strict';\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNilOrEmpty = undefined;\n\nvar _ramda = require('ramda');\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Checks if an array or string Is null or Empty.\n * @param {string|*[]} value\n */\n\n\nvar isNilOrEmpty = exports.isNilOrEmpty = _ramda2[\"default\"].anyPass([_ramda2[\"default\"].isNil, _ramda2[\"default\"].isEmpty]);","module.exports = {\n  F: require('./src/F'),\n  T: require('./src/T'),\n  __: require('./src/__'),\n  add: require('./src/add'),\n  addIndex: require('./src/addIndex'),\n  adjust: require('./src/adjust'),\n  all: require('./src/all'),\n  allPass: require('./src/allPass'),\n  always: require('./src/always'),\n  and: require('./src/and'),\n  any: require('./src/any'),\n  anyPass: require('./src/anyPass'),\n  ap: require('./src/ap'),\n  aperture: require('./src/aperture'),\n  append: require('./src/append'),\n  apply: require('./src/apply'),\n  applySpec: require('./src/applySpec'),\n  ascend: require('./src/ascend'),\n  assoc: require('./src/assoc'),\n  assocPath: require('./src/assocPath'),\n  binary: require('./src/binary'),\n  bind: require('./src/bind'),\n  both: require('./src/both'),\n  call: require('./src/call'),\n  chain: require('./src/chain'),\n  clamp: require('./src/clamp'),\n  clone: require('./src/clone'),\n  comparator: require('./src/comparator'),\n  complement: require('./src/complement'),\n  compose: require('./src/compose'),\n  composeK: require('./src/composeK'),\n  composeP: require('./src/composeP'),\n  concat: require('./src/concat'),\n  cond: require('./src/cond'),\n  construct: require('./src/construct'),\n  constructN: require('./src/constructN'),\n  contains: require('./src/contains'),\n  converge: require('./src/converge'),\n  countBy: require('./src/countBy'),\n  curry: require('./src/curry'),\n  curryN: require('./src/curryN'),\n  dec: require('./src/dec'),\n  defaultTo: require('./src/defaultTo'),\n  descend: require('./src/descend'),\n  difference: require('./src/difference'),\n  differenceWith: require('./src/differenceWith'),\n  dissoc: require('./src/dissoc'),\n  dissocPath: require('./src/dissocPath'),\n  divide: require('./src/divide'),\n  drop: require('./src/drop'),\n  dropLast: require('./src/dropLast'),\n  dropLastWhile: require('./src/dropLastWhile'),\n  dropRepeats: require('./src/dropRepeats'),\n  dropRepeatsWith: require('./src/dropRepeatsWith'),\n  dropWhile: require('./src/dropWhile'),\n  either: require('./src/either'),\n  empty: require('./src/empty'),\n  endsWith: require('./src/endsWith'),\n  eqBy: require('./src/eqBy'),\n  eqProps: require('./src/eqProps'),\n  equals: require('./src/equals'),\n  evolve: require('./src/evolve'),\n  filter: require('./src/filter'),\n  find: require('./src/find'),\n  findIndex: require('./src/findIndex'),\n  findLast: require('./src/findLast'),\n  findLastIndex: require('./src/findLastIndex'),\n  flatten: require('./src/flatten'),\n  flip: require('./src/flip'),\n  forEach: require('./src/forEach'),\n  forEachObjIndexed: require('./src/forEachObjIndexed'),\n  fromPairs: require('./src/fromPairs'),\n  groupBy: require('./src/groupBy'),\n  groupWith: require('./src/groupWith'),\n  gt: require('./src/gt'),\n  gte: require('./src/gte'),\n  has: require('./src/has'),\n  hasIn: require('./src/hasIn'),\n  head: require('./src/head'),\n  identical: require('./src/identical'),\n  identity: require('./src/identity'),\n  ifElse: require('./src/ifElse'),\n  inc: require('./src/inc'),\n  indexBy: require('./src/indexBy'),\n  indexOf: require('./src/indexOf'),\n  init: require('./src/init'),\n  innerJoin: require('./src/innerJoin'),\n  insert: require('./src/insert'),\n  insertAll: require('./src/insertAll'),\n  intersection: require('./src/intersection'),\n  intersectionWith: require('./src/intersectionWith'),\n  intersperse: require('./src/intersperse'),\n  into: require('./src/into'),\n  invert: require('./src/invert'),\n  invertObj: require('./src/invertObj'),\n  invoker: require('./src/invoker'),\n  is: require('./src/is'),\n  isEmpty: require('./src/isEmpty'),\n  isNil: require('./src/isNil'),\n  join: require('./src/join'),\n  juxt: require('./src/juxt'),\n  keys: require('./src/keys'),\n  keysIn: require('./src/keysIn'),\n  last: require('./src/last'),\n  lastIndexOf: require('./src/lastIndexOf'),\n  length: require('./src/length'),\n  lens: require('./src/lens'),\n  lensIndex: require('./src/lensIndex'),\n  lensPath: require('./src/lensPath'),\n  lensProp: require('./src/lensProp'),\n  lift: require('./src/lift'),\n  liftN: require('./src/liftN'),\n  lt: require('./src/lt'),\n  lte: require('./src/lte'),\n  map: require('./src/map'),\n  mapAccum: require('./src/mapAccum'),\n  mapAccumRight: require('./src/mapAccumRight'),\n  mapObjIndexed: require('./src/mapObjIndexed'),\n  match: require('./src/match'),\n  mathMod: require('./src/mathMod'),\n  max: require('./src/max'),\n  maxBy: require('./src/maxBy'),\n  mean: require('./src/mean'),\n  median: require('./src/median'),\n  memoize: require('./src/memoize'),\n  memoizeWith: require('./src/memoizeWith'),\n  merge: require('./src/merge'),\n  mergeAll: require('./src/mergeAll'),\n  mergeDeepLeft: require('./src/mergeDeepLeft'),\n  mergeDeepRight: require('./src/mergeDeepRight'),\n  mergeDeepWith: require('./src/mergeDeepWith'),\n  mergeDeepWithKey: require('./src/mergeDeepWithKey'),\n  mergeWith: require('./src/mergeWith'),\n  mergeWithKey: require('./src/mergeWithKey'),\n  min: require('./src/min'),\n  minBy: require('./src/minBy'),\n  modulo: require('./src/modulo'),\n  multiply: require('./src/multiply'),\n  nAry: require('./src/nAry'),\n  negate: require('./src/negate'),\n  none: require('./src/none'),\n  not: require('./src/not'),\n  nth: require('./src/nth'),\n  nthArg: require('./src/nthArg'),\n  o: require('./src/o'),\n  objOf: require('./src/objOf'),\n  of: require('./src/of'),\n  omit: require('./src/omit'),\n  once: require('./src/once'),\n  or: require('./src/or'),\n  over: require('./src/over'),\n  pair: require('./src/pair'),\n  partial: require('./src/partial'),\n  partialRight: require('./src/partialRight'),\n  partition: require('./src/partition'),\n  path: require('./src/path'),\n  pathEq: require('./src/pathEq'),\n  pathOr: require('./src/pathOr'),\n  pathSatisfies: require('./src/pathSatisfies'),\n  pick: require('./src/pick'),\n  pickAll: require('./src/pickAll'),\n  pickBy: require('./src/pickBy'),\n  pipe: require('./src/pipe'),\n  pipeK: require('./src/pipeK'),\n  pipeP: require('./src/pipeP'),\n  pluck: require('./src/pluck'),\n  prepend: require('./src/prepend'),\n  product: require('./src/product'),\n  project: require('./src/project'),\n  prop: require('./src/prop'),\n  propEq: require('./src/propEq'),\n  propIs: require('./src/propIs'),\n  propOr: require('./src/propOr'),\n  propSatisfies: require('./src/propSatisfies'),\n  props: require('./src/props'),\n  range: require('./src/range'),\n  reduce: require('./src/reduce'),\n  reduceBy: require('./src/reduceBy'),\n  reduceRight: require('./src/reduceRight'),\n  reduceWhile: require('./src/reduceWhile'),\n  reduced: require('./src/reduced'),\n  reject: require('./src/reject'),\n  remove: require('./src/remove'),\n  repeat: require('./src/repeat'),\n  replace: require('./src/replace'),\n  reverse: require('./src/reverse'),\n  scan: require('./src/scan'),\n  sequence: require('./src/sequence'),\n  set: require('./src/set'),\n  slice: require('./src/slice'),\n  sort: require('./src/sort'),\n  sortBy: require('./src/sortBy'),\n  sortWith: require('./src/sortWith'),\n  split: require('./src/split'),\n  splitAt: require('./src/splitAt'),\n  splitEvery: require('./src/splitEvery'),\n  splitWhen: require('./src/splitWhen'),\n  startsWith: require('./src/startsWith'),\n  subtract: require('./src/subtract'),\n  sum: require('./src/sum'),\n  symmetricDifference: require('./src/symmetricDifference'),\n  symmetricDifferenceWith: require('./src/symmetricDifferenceWith'),\n  tail: require('./src/tail'),\n  take: require('./src/take'),\n  takeLast: require('./src/takeLast'),\n  takeLastWhile: require('./src/takeLastWhile'),\n  takeWhile: require('./src/takeWhile'),\n  tap: require('./src/tap'),\n  test: require('./src/test'),\n  times: require('./src/times'),\n  toLower: require('./src/toLower'),\n  toPairs: require('./src/toPairs'),\n  toPairsIn: require('./src/toPairsIn'),\n  toString: require('./src/toString'),\n  toUpper: require('./src/toUpper'),\n  transduce: require('./src/transduce'),\n  transpose: require('./src/transpose'),\n  traverse: require('./src/traverse'),\n  trim: require('./src/trim'),\n  tryCatch: require('./src/tryCatch'),\n  type: require('./src/type'),\n  unapply: require('./src/unapply'),\n  unary: require('./src/unary'),\n  uncurryN: require('./src/uncurryN'),\n  unfold: require('./src/unfold'),\n  union: require('./src/union'),\n  unionWith: require('./src/unionWith'),\n  uniq: require('./src/uniq'),\n  uniqBy: require('./src/uniqBy'),\n  uniqWith: require('./src/uniqWith'),\n  unless: require('./src/unless'),\n  unnest: require('./src/unnest'),\n  until: require('./src/until'),\n  update: require('./src/update'),\n  useWith: require('./src/useWith'),\n  values: require('./src/values'),\n  valuesIn: require('./src/valuesIn'),\n  view: require('./src/view'),\n  when: require('./src/when'),\n  where: require('./src/where'),\n  whereEq: require('./src/whereEq'),\n  without: require('./src/without'),\n  xprod: require('./src/xprod'),\n  zip: require('./src/zip'),\n  zipObj: require('./src/zipObj'),\n  zipWith: require('./src/zipWith')\n};","var _concat = require('./internal/_concat');\n\nvar _curry3 = require('./internal/_curry3');\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\n\n\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});","module.exports = function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) {\n    return new XWrap(fn);\n  };\n}();","var _arity = require('./internal/_arity');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar _has = require('./_has');\n\nmodule.exports = function () {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();","var _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\n\nmodule.exports = _curry2(function and(a, b) {\n  return a && b;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xany = require('./internal/_xany');\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\n\nmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));","var _curry2 = require('./_curry2');\n\nvar _reduced = require('./_reduced');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return _curry2(function _xany(f, xf) {\n    return new XAny(f, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\n\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});","var _curry1 = require('./internal/_curry1');\n\nvar keys = require('./keys');\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nmodule.exports = _curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});","var _curry3 = require('./internal/_curry3');\n\nvar _has = require('./internal/_has');\n\nvar _isArray = require('./internal/_isArray');\n\nvar _isInteger = require('./internal/_isInteger');\n\nvar assoc = require('./assoc');\n\nvar isNil = require('./isNil');\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\n\nmodule.exports = _curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nmodule.exports = _curry1(function isNil(x) {\n  return x == null;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _reduce = require('./internal/_reduce');\n\nvar ap = require('./ap');\n\nvar curryN = require('./curryN');\n\nvar map = require('./map');\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\n\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});","var _isArrayLike = require('./_isArrayLike');\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nmodule.exports = function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n};","var _cloneRegExp = require('./_cloneRegExp');\n\nvar type = require('../type');\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\n\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\nmodule.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n};","var _curry1 = require('./internal/_curry1');\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\n\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});","var _arity = require('./internal/_arity');\n\nvar _pipe = require('./internal/_pipe');\n\nvar reduce = require('./reduce');\n\nvar tail = require('./tail');\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\n\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n};","var chain = require('./chain');\n\nvar compose = require('./compose');\n\nvar map = require('./map');\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\n\n\nmodule.exports = function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n};","var _arity = require('./internal/_arity');\n\nvar _pipeP = require('./internal/_pipeP');\n\nvar reduce = require('./reduce');\n\nvar tail = require('./tail');\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\n\n\nmodule.exports = function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n};","require(\"core-js/modules/es6.array.index-of\");\n\nvar equals = require('../equals');\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n};","var _curry2 = require('./internal/_curry2');\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});","module.exports = function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n};","var _curry2 = require('./internal/_curry2');\n\nvar curry = require('./curry');\n\nvar nAry = require('./nAry');\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\n\n\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});","var _curry2 = require('./internal/_curry2');\n\nvar _map = require('./internal/_map');\n\nvar curryN = require('./curryN');\n\nvar max = require('./max');\n\nvar pluck = require('./pluck');\n\nvar reduce = require('./reduce');\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\n\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nmodule.exports = _curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});","var _contains = require('./internal/_contains');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nmodule.exports = _curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});","var _containsWith = require('./internal/_containsWith');\n\nvar _curry3 = require('./internal/_curry3');\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\n\nmodule.exports = _curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\n\nmodule.exports = _curry2(function dissoc(prop, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\n\nmodule.exports = _curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xdrop = require('./internal/_xdrop');\n\nvar slice = require('./slice');\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropRepeatsWith(pred, xf) {\n    return new XDropRepeatsWith(pred, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\n\nvar last = require('./last');\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));","var nth = require('./nth');\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nmodule.exports = nth(-1);","var _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\n\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});","var _curry1 = require('./internal/_curry1');\n\nvar _isArguments = require('./internal/_isArguments');\n\nvar _isArray = require('./internal/_isArray');\n\nvar _isObject = require('./internal/_isObject');\n\nvar _isString = require('./internal/_isString');\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nmodule.exports = _curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : // else\n  void 0;\n});","var _curry2 = require('./internal/_curry2');\n\nvar drop = require('./drop');\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\n\nmodule.exports = _curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});","var _Set = require('./internal/_Set');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\n\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\n\nmodule.exports = _curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\n\nmodule.exports = _curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});","var _curry1 = require('./internal/_curry1');\n\nvar converge = require('./converge');\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\n\nmodule.exports = _curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});","var _curry1 = require('./internal/_curry1');\n\nvar _isNumber = require('./internal/_isNumber');\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\n\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nmodule.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};","var _curry1 = require('./internal/_curry1');\n\nvar sum = require('./sum');\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\n\nmodule.exports = _curry1(function mean(list) {\n  return sum(list) / list.length;\n});","var add = require('./add');\n\nvar reduce = require('./reduce');\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\n\nmodule.exports = reduce(add, 0);","var _arity = require('./internal/_arity');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _has = require('./internal/_has');\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\n\nmodule.exports = _curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\n\nmodule.exports = _curry2(function multiply(a, b) {\n  return a * b;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nmodule.exports = function () {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function Identity(x) {\n    return {\n      value: x,\n      map: function map(f) {\n        return Identity(f(x));\n      }\n    };\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function (y) {\n      return Identity(f(y));\n    })(x).value;\n  });\n}();","var _arity = require('./_arity');\n\nvar _curry2 = require('./_curry2');\n\nmodule.exports = function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n};","require(\"core-js/modules/es6.function.name\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\n\nmodule.exports = _curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});","var _concat = require('./internal/_concat');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\n\nmodule.exports = _curry2(function prepend(el, list) {\n  return _concat([el], list);\n});","var _curry2 = require('./internal/_curry2');\n\nvar curryN = require('./curryN');\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\n\nmodule.exports = _curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a, b -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *          -               -2\n *         / \\              / \\\n *        1   -            1   3\n *           / \\              / \\\n *          2   -     ==>    2  -1\n *             / \\              / \\\n *            3   -            3   4\n *               / \\              / \\\n *              4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\n\nmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n\n  return acc;\n});","require(\"core-js/modules/es6.number.constructor\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\n\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});","var _curry2 = require('./internal/_curry2');\n\nvar ap = require('./ap');\n\nvar map = require('./map');\n\nvar prepend = require('./prepend');\n\nvar reduceRight = require('./reduceRight');\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\n\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});","var _curry2 = require('./internal/_curry2');\n\nvar _has = require('./internal/_has');\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\n\nmodule.exports = _curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});","var always = require('./always');\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\n\n\nmodule.exports = always(false);","var always = require('./always');\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\n\n\nmodule.exports = always(true);","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {\n  '@@functional/placeholder': true\n};","var _concat = require('./internal/_concat');\n\nvar _curry1 = require('./internal/_curry1');\n\nvar curryN = require('./curryN');\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\n\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xall = require('./internal/_xall');\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\n\nmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));","var _curry2 = require('./_curry2');\n\nvar _reduced = require('./_reduced');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return _curry2(function _xall(f, xf) {\n    return new XAll(f, xf);\n  });\n}();","var _curry1 = require('./internal/_curry1');\n\nvar curryN = require('./curryN');\n\nvar max = require('./max');\n\nvar pluck = require('./pluck');\n\nvar reduce = require('./reduce');\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\n\nmodule.exports = _curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) {\n    return new XMap(f, xf);\n  });\n}();","var _curry1 = require('./internal/_curry1');\n\nvar curryN = require('./curryN');\n\nvar max = require('./max');\n\nvar pluck = require('./pluck');\n\nvar reduce = require('./reduce');\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\n\nmodule.exports = _curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});","var _aperture = require('./internal/_aperture');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xaperture = require('./internal/_xaperture');\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));","module.exports = function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n};","var _concat = require('./_concat');\n\nvar _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) {\n    return new XAperture(n, xf);\n  });\n}();","var _concat = require('./internal/_concat');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\n\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});","var _curry1 = require('./internal/_curry1');\n\nvar apply = require('./apply');\n\nvar curryN = require('./curryN');\n\nvar map = require('./map');\n\nvar max = require('./max');\n\nvar pluck = require('./pluck');\n\nvar reduce = require('./reduce');\n\nvar values = require('./values');\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *                                      sum: R.add,\n *                                      nested: { mul: R.multiply }\n *                                   });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nmodule.exports = _curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\n\n\nmodule.exports = _curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","var _curry1 = require('./internal/_curry1');\n\nvar nAry = require('./nAry');\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\n\nmodule.exports = _curry1(function binary(fn) {\n  return nAry(2, fn);\n});","var _curry2 = require('./internal/_curry2');\n\nvar _isFunction = require('./internal/_isFunction');\n\nvar and = require('./and');\n\nvar lift = require('./lift');\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\n\n\nmodule.exports = _curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});","var curry = require('./curry');\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.times(R.always(' ')),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nmodule.exports = curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});","var _curry2 = require('./_curry2');\n\nvar _flatCat = require('./_flatCat');\n\nvar map = require('../map');\n\nmodule.exports = _curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});","var _forceReduced = require('./_forceReduced');\n\nvar _isArrayLike = require('./_isArrayLike');\n\nvar _reduce = require('./_reduce');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  var preservingReduced = function preservingReduced(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function transducerResult(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function transducerStep(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  return function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function transducerResult(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function transducerStep(result, input) {\n        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n}();","module.exports = function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};","var _curry3 = require('./internal/_curry3');\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\n\nmodule.exports = _curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});","var _clone = require('./internal/_clone');\n\nvar _curry1 = require('./internal/_curry1');\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\n\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a, b -> Boolean) -> (a, b -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\n\n\nmodule.exports = _curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});","var lift = require('./lift');\n\nvar not = require('./not');\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\n\nmodule.exports = lift(not);","module.exports = function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n};","var pipeP = require('./pipeP');\n\nvar reverse = require('./reverse');\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\n\n\nmodule.exports = function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n\n  return pipeP.apply(this, reverse(arguments));\n};","module.exports = function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n};","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _contains = require('./_contains');\n\nvar _map = require('./_map');\n\nvar _quote = require('./_quote');\n\nvar _toISOString = require('./_toISOString');\n\nvar keys = require('../keys');\n\nvar reject = require('../reject');\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function mapPairs(obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _arrayFromIterator = require('./_arrayFromIterator');\n\nvar _functionName = require('./_functionName');\n\nvar _has = require('./_has');\n\nvar identical = require('../identical');\n\nvar keys = require('../keys');\n\nvar type = require('../type');\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n\n      break;\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  stackA.pop();\n  stackB.pop();\n  return true;\n};","module.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n};","require(\"core-js/modules/es6.regexp.match\");\n\nmodule.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};","require(\"core-js/modules/es6.regexp.replace\");\n\nmodule.exports = function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};","require(\"core-js/modules/es6.date.to-iso-string\");\n\n/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = function () {\n  var pad = function pad(n) {\n    return (n < 10 ? '0' : '') + n;\n  };\n\n  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n    return d.toISOString();\n  } : function _toISOString(d) {\n    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n  };\n}();","'use strict';\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar fails = require('./_fails');\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\nmodule.exports = (fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;\n","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) {\n    return new XFilter(f, xf);\n  });\n}();","var _arity = require('./internal/_arity');\n\nvar _curry1 = require('./internal/_curry1');\n\nvar map = require('./map');\n\nvar max = require('./max');\n\nvar reduce = require('./reduce');\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\n\nmodule.exports = _curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});","var _curry1 = require('./internal/_curry1');\n\nvar constructN = require('./constructN');\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\n\nmodule.exports = _curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});","var _contains = require('./internal/_contains');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\n\n\nmodule.exports = _curry2(_contains);","var reduceBy = require('./reduceBy');\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\n\nmodule.exports = reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);","var _curryN = require('./_curryN');\n\nvar _has = require('./_has');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  });\n}();","var add = require('./add');\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\n\nmodule.exports = add(-1);","var _curry3 = require('./internal/_curry3');\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\n\n\nmodule.exports = _curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _isInteger = require('./internal/_isInteger');\n\nvar assoc = require('./assoc');\n\nvar dissoc = require('./dissoc');\n\nvar remove = require('./remove');\n\nvar update = require('./update');\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nmodule.exports = _curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\n\nmodule.exports = _curry2(function divide(a, b) {\n  return a / b;\n});","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) {\n    return new XDrop(n, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _dropLast = require('./internal/_dropLast');\n\nvar _xdropLast = require('./internal/_xdropLast');\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));","var take = require('../take');\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};","var _curry2 = require('./_curry2');\n\nvar _reduced = require('./_reduced');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) {\n    return new XTake(n, xf);\n  });\n}();","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) {\n    return new XDropLast(n, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _dropLastWhile = require('./internal/_dropLastWhile');\n\nvar _xdropLastWhile = require('./internal/_xdropLastWhile');\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} predicate The function to be called on each element\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));","module.exports = function dropLastWhile(pred, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0 && pred(list[idx])) {\n    idx -= 1;\n  }\n\n  return Array.prototype.slice.call(list, 0, idx + 1);\n};","var _curry2 = require('./_curry2');\n\nvar _reduce = require('./_reduce');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return _curry2(function _xdropLastWhile(fn, xf) {\n    return new XDropLastWhile(fn, xf);\n  });\n}();","var _curry1 = require('./internal/_curry1');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\n\nvar dropRepeatsWith = require('./dropRepeatsWith');\n\nvar equals = require('./equals');\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\n\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xdropWhile = require('./internal/_xdropWhile');\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n */\n\n\nmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len && pred(list[idx])) {\n    idx += 1;\n  }\n\n  return Array.prototype.slice.call(list, idx);\n}));","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) {\n    return new XDropWhile(f, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _isFunction = require('./internal/_isFunction');\n\nvar lift = require('./lift');\n\nvar or = require('./or');\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\n\n\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});","var _curry2 = require('./internal/_curry2');\n\nvar equals = require('./equals');\n\nvar takeLast = require('./takeLast');\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\n\nmodule.exports = _curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});","var _curry3 = require('./internal/_curry3');\n\nvar equals = require('./equals');\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\n\nmodule.exports = _curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});","var _curry3 = require('./internal/_curry3');\n\nvar equals = require('./equals');\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\n\nmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\n\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xfind = require('./internal/_xfind');\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));","var _curry2 = require('./_curry2');\n\nvar _reduced = require('./_reduced');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) {\n    return new XFind(f, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xfindIndex = require('./internal/_xfindIndex');\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));","var _curry2 = require('./_curry2');\n\nvar _reduced = require('./_reduced');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) {\n    return new XFindIndex(f, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xfindLast = require('./internal/_xfindLast');\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return _curry2(function _xfindLast(f, xf) {\n    return new XFindLast(f, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xfindLastIndex = require('./internal/_xfindLastIndex');\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\n\nmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return _curry2(function _xfindLastIndex(f, xf) {\n    return new XFindLastIndex(f, xf);\n  });\n}();","var _curry1 = require('./internal/_curry1');\n\nvar _makeFlat = require('./internal/_makeFlat');\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nmodule.exports = _curry1(_makeFlat(true));","var _checkForMethod = require('./internal/_checkForMethod');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\n\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));","var _curry2 = require('./internal/_curry2');\n\nvar keys = require('./keys');\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\n\nmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nmodule.exports = _curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});","var _checkForMethod = require('./internal/_checkForMethod');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar reduceBy = require('./reduceBy');\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));","var _curry2 = require('./internal/_curry2');\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\n\nmodule.exports = _curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\n\nmodule.exports = _curry2(function gt(a, b) {\n  return a > b;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\n\nmodule.exports = _curry2(function gte(a, b) {\n  return a >= b;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _has = require('./internal/_has');\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nmodule.exports = _curry2(_has);","var _curry2 = require('./internal/_curry2');\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\n\nmodule.exports = _curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});","var nth = require('./nth');\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nmodule.exports = nth(0);","var _curry3 = require('./internal/_curry3');\n\nvar curryN = require('./curryN');\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\n\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});","var add = require('./add');\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\n\nmodule.exports = add(1);","var reduceBy = require('./reduceBy');\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nmodule.exports = reduceBy(function (acc, elem) {\n  return elem;\n}, null);","require(\"core-js/modules/es6.array.index-of\");\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _indexOf = require('./internal/_indexOf');\n\nvar _isArray = require('./internal/_isArray');\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\n\nmodule.exports = _curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});","var slice = require('./slice');\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\n\nmodule.exports = slice(0, -1);","var _containsWith = require('./internal/_containsWith');\n\nvar _curry3 = require('./internal/_curry3');\n\nvar _filter = require('./internal/_filter');\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig (a -> b -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\n\nmodule.exports = _curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\n\nmodule.exports = _curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\n\nmodule.exports = _curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});","var _contains = require('./internal/_contains');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _filter = require('./internal/_filter');\n\nvar flip = require('./flip');\n\nvar uniq = require('./uniq');\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\n\nmodule.exports = _curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nvar _contains = require('./_contains'); // A simple Set type that honours R.equals semantics\n\n\nmodule.exports = function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  } // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n\n\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  function hasOrAdd(item, shouldAdd, set) {\n    var type = typeof item;\n    var prevSize, newSize;\n\n    switch (type) {\n      case 'string':\n      case 'number':\n        // distinguish between +0 and -0\n        if (item === 0 && 1 / item === -Infinity) {\n          if (set._items['-0']) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items['-0'] = true;\n            }\n\n            return false;\n          }\n        } // these types can all utilise the native Set\n\n\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n\n            set._nativeSet.add(item);\n\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = {};\n              set._items[type][item] = true;\n            }\n\n            return false;\n          } else if (item in set._items[type]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][item] = true;\n            }\n\n            return false;\n          }\n        }\n\n      case 'boolean':\n        // set._items['boolean'] holds a two element array\n        // representing [ falseExists, trueExists ]\n        if (type in set._items) {\n          var bIdx = item ? 1 : 0;\n\n          if (set._items[type][bIdx]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][bIdx] = true;\n            }\n\n            return false;\n          }\n        } else {\n          if (shouldAdd) {\n            set._items[type] = item ? [false, true] : [true, false];\n          }\n\n          return false;\n        }\n\n      case 'function':\n        // compare functions for reference equality\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n\n            set._nativeSet.add(item);\n\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = [item];\n            }\n\n            return false;\n          }\n\n          if (!_contains(item, set._items[type])) {\n            if (shouldAdd) {\n              set._items[type].push(item);\n            }\n\n            return false;\n          }\n\n          return true;\n        }\n\n      case 'undefined':\n        if (set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type] = true;\n          }\n\n          return false;\n        }\n\n      case 'object':\n        if (item === null) {\n          if (!set._items['null']) {\n            if (shouldAdd) {\n              set._items['null'] = true;\n            }\n\n            return false;\n          }\n\n          return true;\n        }\n\n      /* falls through */\n\n      default:\n        // reduce the search size of heterogeneous sets by creating buckets\n        // for each type.\n        type = Object.prototype.toString.call(item);\n\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        } // scan through all previously applied items\n\n\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n    }\n  }\n\n  return _Set;\n}();","var _containsWith = require('./internal/_containsWith');\n\nvar _curry3 = require('./internal/_curry3');\n\nvar uniqWith = require('./uniqWith');\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate function that determines whether\n *        the two supplied elements are equal.\n * @param {Array} list1 One list of items to compare\n * @param {Array} list2 A second list of items to compare\n * @return {Array} A new list containing those elements common to both lists.\n * @see R.innerJoin\n * @deprecated since v0.24.0\n * @example\n *\n *      var buffaloSpringfield = [\n *        {id: 824, name: 'Richie Furay'},\n *        {id: 956, name: 'Dewey Martin'},\n *        {id: 313, name: 'Bruce Palmer'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *      var csny = [\n *        {id: 204, name: 'David Crosby'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 539, name: 'Graham Nash'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *\n *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\n\nmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  var results = [];\n  var idx = 0;\n\n  while (idx < filteredList.length) {\n    if (_containsWith(pred, filteredList[idx], lookupList)) {\n      results[results.length] = filteredList[idx];\n    }\n\n    idx += 1;\n  }\n\n  return uniqWith(pred, results);\n});","var _checkForMethod = require('./internal/_checkForMethod');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\n\n\nmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));","var _clone = require('./internal/_clone');\n\nvar _curry3 = require('./internal/_curry3');\n\nvar _isTransformer = require('./internal/_isTransformer');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _stepCat = require('./internal/_stepCat');\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\n\nmodule.exports = _curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});","var _assign = require('./_assign');\n\nvar _identity = require('./_identity');\n\nvar _isArrayLike = require('./_isArrayLike');\n\nvar _isTransformer = require('./_isTransformer');\n\nvar objOf = require('../objOf');\n\nmodule.exports = function () {\n  var _stepCatArray = {\n    '@@transducer/init': Array,\n    '@@transducer/step': function transducerStep(xs, x) {\n      xs.push(x);\n      return xs;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatString = {\n    '@@transducer/init': String,\n    '@@transducer/step': function transducerStep(a, b) {\n      return a + b;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatObject = {\n    '@@transducer/init': Object,\n    '@@transducer/step': function transducerStep(result, input) {\n      return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n    },\n    '@@transducer/result': _identity\n  };\n  return function _stepCat(obj) {\n    if (_isTransformer(obj)) {\n      return obj;\n    }\n\n    if (_isArrayLike(obj)) {\n      return _stepCatArray;\n    }\n\n    if (typeof obj === 'string') {\n      return _stepCatString;\n    }\n\n    if (typeof obj === 'object') {\n      return _stepCatObject;\n    }\n\n    throw new Error('Cannot create transformer for ' + obj);\n  };\n}();","var _has = require('./_has'); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n};","var _curry1 = require('./internal/_curry1');\n\nvar _has = require('./internal/_has');\n\nvar keys = require('./keys');\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\n\nmodule.exports = _curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});","var _curry1 = require('./internal/_curry1');\n\nvar keys = require('./keys');\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\n\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});","var _curry1 = require('./internal/_curry1');\n\nvar empty = require('./empty');\n\nvar equals = require('./equals');\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\n\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});","var invoker = require('./invoker');\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nmodule.exports = invoker(1, 'join');","var _curry1 = require('./internal/_curry1');\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\n\nmodule.exports = _curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});","require(\"core-js/modules/es6.array.last-index-of\");\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _isArray = require('./internal/_isArray');\n\nvar equals = require('./equals');\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\n\nmodule.exports = _curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});","var _curry1 = require('./internal/_curry1');\n\nvar lens = require('./lens');\n\nvar nth = require('./nth');\n\nvar update = require('./update');\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\n\nmodule.exports = _curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});","var _curry1 = require('./internal/_curry1');\n\nvar assocPath = require('./assocPath');\n\nvar lens = require('./lens');\n\nvar path = require('./path');\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\n\nmodule.exports = _curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});","var _curry1 = require('./internal/_curry1');\n\nvar assoc = require('./assoc');\n\nvar lens = require('./lens');\n\nvar prop = require('./prop');\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\n\nmodule.exports = _curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nmodule.exports = _curry2(function lt(a, b) {\n  return a < b;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\n\nmodule.exports = _curry2(function lte(a, b) {\n  return a <= b;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\n\nmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});","var _curry3 = require('./internal/_curry3');\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\n\n\nmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [result, tuple[0]];\n});","var _curry2 = require('./internal/_curry2');\n\nvar _reduce = require('./internal/_reduce');\n\nvar keys = require('./keys');\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});","require(\"core-js/modules/es6.regexp.match\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\n\nmodule.exports = _curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});","var _curry2 = require('./internal/_curry2');\n\nvar _isInteger = require('./internal/_isInteger');\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\n\nmodule.exports = _curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\n\nmodule.exports = _curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});","require(\"core-js/modules/es6.array.sort\");\n\nvar _curry1 = require('./internal/_curry1');\n\nvar mean = require('./mean');\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\n\nmodule.exports = _curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});","var memoizeWith = require('./memoizeWith');\n\nvar toString = require('./toString');\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\n\nmodule.exports = memoizeWith(function () {\n  return toString(arguments);\n});","var _assign = require('./internal/_assign');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\n\n\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});","var _assign = require('./internal/_assign');\n\nvar _curry1 = require('./internal/_curry1');\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nmodule.exports = _curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});","var _curry2 = require('./internal/_curry2');\n\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\n\nmodule.exports = _curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});","var _curry2 = require('./internal/_curry2');\n\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nmodule.exports = _curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});","var _curry3 = require('./internal/_curry3');\n\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\n\nmodule.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});","var _curry3 = require('./internal/_curry3');\n\nvar mergeWithKey = require('./mergeWithKey');\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\n\nmodule.exports = _curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\n\nmodule.exports = _curry2(function min(a, b) {\n  return b < a ? b : a;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\n\nmodule.exports = _curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\n\nmodule.exports = _curry2(function modulo(a, b) {\n  return a % b;\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\n\nmodule.exports = _curry1(function negate(n) {\n  return -n;\n});","var _complement = require('./internal/_complement');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xany = require('./internal/_xany');\n\nvar any = require('./any');\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\n\nmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));","var _curry1 = require('./internal/_curry1');\n\nvar curryN = require('./curryN');\n\nvar nth = require('./nth');\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\n\nmodule.exports = _curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});","var _curry3 = require('./internal/_curry3');\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + lastName\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\n\nmodule.exports = _curry3(function o(f, g, x) {\n  return f(g(x));\n});","var _curry1 = require('./internal/_curry1');\n\nvar _of = require('./internal/_of');\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\n\nmodule.exports = _curry1(_of);","module.exports = function _of(x) {\n  return [x];\n};","var _contains = require('./internal/_contains');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\n\nmodule.exports = _curry2(function omit(names, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (!_contains(prop, names)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});","var _arity = require('./internal/_arity');\n\nvar _curry1 = require('./internal/_curry1');\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nmodule.exports = _curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\n\nmodule.exports = _curry2(function pair(fst, snd) {\n  return [fst, snd];\n});","var _concat = require('./internal/_concat');\n\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\n\nmodule.exports = _createPartialApplicator(_concat);","var _concat = require('./internal/_concat');\n\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\n\nvar flip = require('./flip');\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\n\nmodule.exports = _createPartialApplicator(flip(_concat));","var filter = require('./filter');\n\nvar juxt = require('./juxt');\n\nvar reject = require('./reject');\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\n\nmodule.exports = juxt([filter, reject]);","var _curry3 = require('./internal/_curry3');\n\nvar equals = require('./equals');\n\nvar path = require('./path');\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\n\nmodule.exports = _curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});","var _curry3 = require('./internal/_curry3');\n\nvar defaultTo = require('./defaultTo');\n\nvar path = require('./path');\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\n\nmodule.exports = _curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});","var _curry3 = require('./internal/_curry3');\n\nvar path = require('./path');\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\n\n\nmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nmodule.exports = _curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nmodule.exports = _curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});","var composeK = require('./composeK');\n\nvar reverse = require('./reverse');\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\n\n\nmodule.exports = function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n\n  return composeK.apply(this, reverse(arguments));\n};","var multiply = require('./multiply');\n\nvar reduce = require('./reduce');\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\n\nmodule.exports = reduce(multiply, 1);","var _map = require('./internal/_map');\n\nvar identity = require('./identity');\n\nvar pickAll = require('./pickAll');\n\nvar useWith = require('./useWith');\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\n\nmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity","require(\"core-js/modules/es6.function.name\");\n\nvar _curry3 = require('./internal/_curry3');\n\nvar equals = require('./equals');\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.equals, R.propSatisfies\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\n\nmodule.exports = _curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});","require(\"core-js/modules/es6.function.name\");\n\nvar _curry3 = require('./internal/_curry3');\n\nvar is = require('./is');\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\n\nmodule.exports = _curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});","var _curry3 = require('./internal/_curry3');\n\nvar _has = require('./internal/_has');\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\n\nmodule.exports = _curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});","require(\"core-js/modules/es6.function.name\");\n\nvar _curry3 = require('./internal/_curry3');\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\n\nmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\n\nmodule.exports = _curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});","var _curry2 = require('./internal/_curry2');\n\nvar _isNumber = require('./internal/_isNumber');\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\n\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});","var _curryN = require('./internal/_curryN');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _reduced = require('./internal/_reduced');\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\n\nmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});","var _curry1 = require('./internal/_curry1');\n\nvar _reduced = require('./internal/_reduced');\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\n\nmodule.exports = _curry1(_reduced);","var _curry2 = require('./internal/_curry2');\n\nvar always = require('./always');\n\nvar times = require('./times');\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\n\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});","require(\"core-js/modules/es6.regexp.replace\");\n\nvar _curry3 = require('./internal/_curry3');\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\n\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a,b -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\n\nmodule.exports = _curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});","var _curry3 = require('./internal/_curry3');\n\nvar always = require('./always');\n\nvar over = require('./over');\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\n\nmodule.exports = _curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});","require(\"core-js/modules/es6.array.sort\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\n\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});","require(\"core-js/modules/es6.array.sort\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\n\nmodule.exports = _curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});","require(\"core-js/modules/es6.array.sort\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [a -> a -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\n\nmodule.exports = _curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});","var invoker = require('./invoker');\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\n\nmodule.exports = invoker(1, 'split');","var _curry2 = require('./internal/_curry2');\n\nvar length = require('./length');\n\nvar slice = require('./slice');\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\n\nmodule.exports = _curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});","var _curry2 = require('./internal/_curry2');\n\nvar slice = require('./slice');\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\n\nmodule.exports = _curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\n\nmodule.exports = _curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});","var _curry2 = require('./internal/_curry2');\n\nvar equals = require('./equals');\n\nvar take = require('./take');\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\n\nmodule.exports = _curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});","require(\"core-js/modules/es6.number.constructor\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\n\nmodule.exports = _curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});","var _curry2 = require('./internal/_curry2');\n\nvar concat = require('./concat');\n\nvar difference = require('./difference');\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\n\nmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});","var _curry3 = require('./internal/_curry3');\n\nvar concat = require('./concat');\n\nvar differenceWith = require('./differenceWith');\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\n\nmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n */\n\n\nmodule.exports = _curry2(function takeLastWhile(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0 && fn(list[idx])) {\n    idx -= 1;\n  }\n\n  return Array.prototype.slice.call(list, idx + 1);\n});","var _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xtakeWhile = require('./internal/_xtakeWhile');\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n */\n\n\nmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len && fn(list[idx])) {\n    idx += 1;\n  }\n\n  return Array.prototype.slice.call(list, 0, idx);\n}));","var _curry2 = require('./_curry2');\n\nvar _reduced = require('./_reduced');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return _curry2(function _xtakeWhile(f, xf) {\n    return new XTakeWhile(f, xf);\n  });\n}();","var _curry2 = require('./internal/_curry2');\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\n\nmodule.exports = _curry2(function tap(fn, x) {\n  fn(x);\n  return x;\n});","var _cloneRegExp = require('./internal/_cloneRegExp');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _isRegExp = require('./internal/_isRegExp');\n\nvar toString = require('./toString');\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\n\nmodule.exports = _curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nmodule.exports = function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n};","var invoker = require('./invoker');\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nmodule.exports = invoker(0, 'toLowerCase');","var _curry1 = require('./internal/_curry1');\n\nvar _has = require('./internal/_has');\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\n\nmodule.exports = _curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});","var invoker = require('./invoker');\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nmodule.exports = invoker(0, 'toUpperCase');","var _reduce = require('./internal/_reduce');\n\nvar _xwrap = require('./internal/_xwrap');\n\nvar curryN = require('./curryN');\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\n\nmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\n\nmodule.exports = _curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});","var _curry3 = require('./internal/_curry3');\n\nvar map = require('./map');\n\nvar sequence = require('./sequence');\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\n\n\nmodule.exports = _curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nvar _curry1 = require('./internal/_curry1');\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\n\nmodule.exports = function () {\n  var ws = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\" + \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" + \"\\u2029\\uFEFF\";\n  var zeroWidth = \"\\u200B\";\n  var hasProtoTrim = typeof String.prototype.trim === 'function';\n\n  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}();","var _arity = require('./internal/_arity');\n\nvar _concat = require('./internal/_concat');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\n\n\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\n\nmodule.exports = _curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});","var _curry1 = require('./internal/_curry1');\n\nvar nAry = require('./nAry');\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\n\nmodule.exports = _curry1(function unary(fn) {\n  return nAry(1, fn);\n});","var _curry2 = require('./internal/_curry2');\n\nvar curryN = require('./curryN');\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\n\nmodule.exports = _curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\n\nmodule.exports = _curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});","var _concat = require('./internal/_concat');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar compose = require('./compose');\n\nvar uniq = require('./uniq');\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\n\nmodule.exports = _curry2(compose(uniq, _concat));","var _concat = require('./internal/_concat');\n\nvar _curry3 = require('./internal/_curry3');\n\nvar uniqWith = require('./uniqWith');\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\n\nmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\n\nmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});","var _identity = require('./internal/_identity');\n\nvar chain = require('./chain');\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\n\nmodule.exports = chain(_identity);","var _curry3 = require('./internal/_curry3');\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\n\nmodule.exports = _curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});","var _curry1 = require('./internal/_curry1');\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\n\nmodule.exports = _curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nmodule.exports = function () {\n  // `Const` is a functor that effectively ignores the function given to `map`.\n  var Const = function Const(x) {\n    return {\n      value: x,\n      'fantasy-land/map': function fantasyLandMap() {\n        return this;\n      }\n    };\n  };\n\n  return _curry2(function view(lens, x) {\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    return lens(Const)(x).value;\n  });\n}();","var _curry3 = require('./internal/_curry3');\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\n\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});","var _curry2 = require('./internal/_curry2');\n\nvar equals = require('./equals');\n\nvar map = require('./map');\n\nvar where = require('./where');\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\n\nmodule.exports = _curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});","var _contains = require('./internal/_contains');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar flip = require('./flip');\n\nvar reject = require('./reject');\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nmodule.exports = _curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\n\nmodule.exports = _curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\n\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nmodule.exports = _curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});","var _curry3 = require('./internal/_curry3');\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,b -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\n\nmodule.exports = _curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});","'use strict';\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNotNilOrEmpty = undefined;\n\nvar _ramda = require('ramda');\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nvar _isNilOrEmpty = require('./isNilOrEmpty');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Checks if an array or string are NOT null, undefined or Empty.\n */\n\n\nvar isNotNilOrEmpty = exports.isNotNilOrEmpty = _ramda2[\"default\"].compose(_ramda2[\"default\"].not, _isNilOrEmpty.isNilOrEmpty);","'use strict';\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = undefined;\n\nvar _ptzLog = require('ptz-log');\n/**\n * run console.log() and return the same obj\n * @param  {any} o any object\n * @return {any}   same object\n */\n\n\nvar log = exports.log = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function (obj) {\n    _ptzLog.log.apply(undefined, args.concat([obj]));\n\n    return obj;\n  };\n};","'use strict';\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logInOut = exports.log = undefined;\n\nvar _jsonStringifySafe = require('json-stringify-safe');\n\nvar _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _ramda = require('ramda');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar logColors = {\n  reset: '\\x1B[0m',\n  bright: '\\x1B[1m',\n  dim: '\\x1B[2m',\n  underscore: '\\x1B[4m',\n  blink: '\\x1B[5m',\n  reverse: '\\x1B[7m',\n  hidden: '\\x1B[8m',\n  black: '\\x1B[30m',\n  red: '\\x1B[31m',\n  green: '\\x1B[32m',\n  yellow: '\\x1B[33m',\n  blue: '\\x1B[34m',\n  magenta: '\\x1B[35m',\n  cyan: '\\x1B[36m',\n  white: '\\x1B[37m'\n};\n\nvar render = function render(txt, arg) {\n  if ((0, _ramda.isNil)(arg)) return '' + txt + arg + ' ';\n\n  if (arg.ptzLogColor) {\n    return '' + txt + logColors[arg.ptzLogColor];\n  }\n\n  if ((0, _ramda.is)(Object, arg)) {\n    return txt + (0, _jsonStringifySafe2[\"default\"])(arg, null, 2);\n  }\n\n  return txt + '\\n' + arg + ' ';\n};\n\nvar log = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  console.log('\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');\n  console.log((0, _moment2[\"default\"])().format('H:mm:ss MMMM Do YYYY'));\n  console.log((0, _ramda.reduce)(render, '', args));\n  console.log(logColors.reset + '\\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n');\n};\n\nfunction logInOut(flog, fn) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  flog('in: \\n', args);\n  var out = fn.apply(undefined, args);\n  flog('out: \\n', out);\n  return out;\n}\n\nexports[\"default\"] = log;\nexports.log = log;\nexports.logInOut = logInOut;","require(\"core-js/modules/es6.array.index-of\");\n\nexports = module.exports = stringify;\nexports.getSerialize = serializer;\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [],\n      keys = [];\n  if (cycleReplacer == null) cycleReplacer = function cycleReplacer(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\";\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\n  };\n  return function (key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value);\n    } else stack.push(value);\n\n    return replacer == null ? value : replacer.call(this, key, value);\n  };\n}","require(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.date.to-iso-string\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.object.is-frozen\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function ($isFrozen) {\n  return function isFrozen(it) {\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import always from './always';\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\n\nvar F =\n/*#__PURE__*/\nalways(false);\nexport default F;","import always from './always';\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\n\nvar T =\n/*#__PURE__*/\nalways(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import \"core-js/modules/es6.number.constructor\";\nimport _curry2 from './internal/_curry2';\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.is-array\";\n\n/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function init() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function result(_result) {\n    return this.xf['@@transducer/result'](_result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","import _curry2 from './internal/_curry2';\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _has from './_has';\nvar toString = Object.prototype.toString;\n\nvar _isArguments = function _isArguments() {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments'; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n};\n\nvar keys =\n/*#__PURE__*/\n_curry1(_keys);\n\nexport default keys;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","import _curry2 from './internal/_curry2';\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});\n\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;","import _curry2 from './internal/_curry2';\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","import _curry2 from './internal/_curry2';\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;","import _curry2 from './internal/_curry2';\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;","import _curry3 from './internal/_curry3';\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;","import _curry3 from './internal/_curry3';\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nexport default assoc;","import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\n\n/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\nexport default assocPath;","import _curry2 from './internal/_curry2';\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import curry from './curry';\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function preservingReduced(xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function transducerResult(result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function transducerStep(result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function transducerResult(result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function transducerStep(result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nexport default _xchain;","import _curry3 from './internal/_curry3';\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;","import \"core-js/modules/es6.regexp.constructor\";\nexport default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _curry1 from './internal/_curry1';\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;","import _curry1 from './internal/_curry1';\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nexport default comparator;","import _curry1 from './internal/_curry1';\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import lift from './lift';\nimport not from './not';\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import \"core-js/modules/es6.regexp.split\";\nimport _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\n\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\n\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\n\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","import _curry2 from './internal/_curry2';\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n\nexport default identical;","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","import \"core-js/modules/es6.regexp.match\";\nexport default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import \"core-js/modules/es6.array.index-of\";\nimport equals from '../equals';\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _indexOf from './_indexOf';\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import \"core-js/modules/es6.regexp.replace\";\nexport default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","import \"core-js/modules/es6.date.to-iso-string\";\n\n/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.sort\";\nimport _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function mapPairs(obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\n\nvar contains =\n/*#__PURE__*/\n_curry2(_contains);\n\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import reduceBy from './reduceBy';\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n});\n\nexport default dissoc;","import _curry3 from './internal/_curry3';\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;","import take from '../take';\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;","import slice from '../slice';\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import nth from './nth';\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : // else\n  void 0;\n});\n\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;","import _curry2 from './internal/_curry2';\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nexport default groupBy;","import _curry2 from './internal/_curry2';\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;","import _curry2 from './internal/_curry2';\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nexport default gt;","import _curry2 from './internal/_curry2';\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(_has);\n\nexport default has;","import _curry2 from './internal/_curry2';\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\nexport default hasIn;","import nth from './nth';\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import add from './add';\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nexport default inc;","import reduceBy from './reduceBy';\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import \"core-js/modules/es6.array.index-of\";\nimport _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;","import slice from './slice';\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nexport default insert;","import _curry3 from './internal/_curry3';\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _contains from './_contains';\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  } // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n\n\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\n\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;","import \"core-js/modules/es6.object.assign\";\nimport _objectAssign from './_objectAssign';\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has'; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}","import _curry2 from './internal/_curry2';\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function transducerStep(xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function transducerStep(a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function transducerStep(result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry2 from './internal/_curry2';\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import invoker from './invoker';\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _curry1 from './internal/_curry1';\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nexport default keysIn;","import \"core-js/modules/es6.array.last-index-of\";\nimport _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _curry2 from './internal/_curry2';\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nexport default lt;","import _curry2 from './internal/_curry2';\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nexport default lte;","import _curry3 from './internal/_curry3';\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [result, tuple[0]];\n});\n\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","import \"core-js/modules/es6.regexp.match\";\nimport _curry2 from './internal/_curry2';\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;","import _curry3 from './internal/_curry3';\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;","import \"core-js/modules/es6.array.sort\";\nimport _curry1 from './internal/_curry1';\nimport mean from './mean';\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoize =\n/*#__PURE__*/\nmemoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\n\nexport default min;","import _curry3 from './internal/_curry3';\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\nexport default minBy;","import _curry2 from './internal/_curry2';\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;","import _curry2 from './internal/_curry2';\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import _curry1 from './internal/_curry1';\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_complement(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, any)));\n\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;","import _curry3 from './internal/_curry3';\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;","import _curry2 from './internal/_curry2';\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;","import _curry3 from './internal/_curry3'; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function Identity(x) {\n  return {\n    value: x,\n    map: function map(f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _curry2 from './internal/_curry2';\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pick;","import \"core-js/modules/es6.function.name\";\nimport _curry2 from './internal/_curry2';\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","import _curry2 from './internal/_curry2';\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\n\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;","import \"core-js/modules/es6.function.name\";\nimport _curry3 from './internal/_curry3';\nimport equals from './equals';\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\nexport default propEq;","import \"core-js/modules/es6.function.name\";\nimport _curry3 from './internal/_curry3';\nimport is from './is';\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\n\nexport default propOr;","import \"core-js/modules/es6.function.name\";\nimport _curry3 from './internal/_curry3';\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","import _curry3 from './internal/_curry3';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;","import \"core-js/modules/es6.number.constructor\";\nimport _curry2 from './internal/_curry2';\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import \"core-js/modules/es6.regexp.replace\";\nimport _curry3 from './internal/_curry3';\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;","import _curry3 from './internal/_curry3';\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\nvar scan =\n/*#__PURE__*/\n_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import \"core-js/modules/es6.array.sort\";\nimport _curry2 from './internal/_curry2';\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;","import \"core-js/modules/es6.array.sort\";\nimport _curry2 from './internal/_curry2';\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import \"core-js/modules/es6.array.sort\";\nimport _curry2 from './internal/_curry2';\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;","import invoker from './invoker';\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;","import \"core-js/modules/es6.number.constructor\";\nimport _curry2 from './internal/_curry2';\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import invoker from './invoker';\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _curry1 from './internal/_curry1';\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;","import invoker from './invoker';\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\n\nexport default traverse;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.string.trim\";\nimport _curry1 from './internal/_curry1';\nvar ws = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\" + \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" + \"\\u2029\\uFEFF\";\nvar zeroWidth = \"\\u200B\";\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar _trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\n\nvar trim =\n/*#__PURE__*/\n_curry1(_trim);\n\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;","import _curry3 from './internal/_curry3';\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;","import _curry1 from './internal/_curry1';\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nexport default valuesIn;","import _curry2 from './internal/_curry2'; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function Const(x) {\n  return {\n    value: x,\n    'fantasy-land/map': function fantasyLandMap() {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","import _curry3 from './internal/_curry3';\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\n\nexport default without;","import _curry2 from './internal/_curry2';\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","import _curry2 from './internal/_curry2';\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;","import _curry2 from './internal/_curry2';\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;","import _curry3 from './internal/_curry3';\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zipWith;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\n\n/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry3 from './internal/_curry3.js';\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nexport default assoc;","import _curry1 from './internal/_curry1.js';\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\nexport default assocPath;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import _curry2 from './internal/_curry2.js';\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});\n\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;"],"sourceRoot":""}