{"version":3,"sources":["webpack:///./src/components/BtnLink.js","webpack:///./src/templates/tag-page.js","webpack:///./src/components/A.js","webpack:///./src/components/Link.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostAuthor.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCardList.js"],"names":["BtnLink","styled","Link","withConfig","displayName","componentId","_ref","theme","fonts","SansSerif","_ref2","colors","white","_ref3","scale","_ref4","black","props","blackShades","_ref5","__webpack_require__","d","__webpack_exports__","pageQuery","Wrapper","section","page","margin","padding","Header","header","fontFamily","H1","h1","TagRoute","data","pageContext","location","posts","allMarkdownRemark","edges","map","p","node","author","site","siteMetadata","allTagsLink","react_default","a","createElement","index_es","id","txt","components_BtnLink","to","layout","Helmet_default","title","tag","meta","name","content","values","nPosts","totalCount","PostCardList","A","color","textDecoration","hover","withComponent","Time","Object","assign","dateTime","date","value","Date","month","day","year","Grid","blog","fontSize","lineHeight","span","time","ProfilePicture","Gravatar","FollowButton","PostAuthor","minutes","cups","className","showFollow","timeToRead","columns","styled_css_grid_esm","middle","email","alt","width","height","href","twitter","target","PostAuthor_Date","components_Time","pubdate","Math","round","Array","fill","join","GridContainer","list","item","border","media","md","_templateObject","imageOnTop","Body","Cell","Footer","Title","h2","TitleLink","Text","text","Label","div","Image","Img","PostCard","post","fields","slug","sizes","frontmatter","image","childImageSharp","rows","excerpt","fillRule","gap","alignContent","key","components_PostCard"],"mappings":"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","file":"component---src-templates-tag-page-js-d30d876603f42ea6c43b.js","sourcesContent":["import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst BtnLink = styled(Link)`\n    font-family: ${({theme}) => theme.fonts.SansSerif};\n    background-color: ${({theme}) => theme.colors.white};\n    padding: 1rem;\n    margin: ${({theme}) => theme.scale(2)} auto;\n    color: ${({theme}) => theme.colors.black};\n    border-radius: 0.2rem;\n    text-decoration: none;\n    display: table;\n    transition: 0.3s;\n\n    &:hover {\n        background-color: ${props => props.theme.colors.blackShades[0]};\n        color: ${({theme}) => theme.colors.white};\n        transition: 0.3s;\n    }\n`;\n\nexport default BtnLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport PostCardList from '../components/PostCardList';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\nimport BtnLink from '../components/BtnLink';\n\nconst Wrapper = styled.section`\n  margin: ${props => props.theme.page.margin};\n  padding: ${props => props.theme.page.padding};\n`;\n\nconst Header = styled.header`\n  font-family: ${props => props.theme.page.header.fontFamily};\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  margin: ${props => props.theme.page.header.margin};\n`;\n\nconst H1 = styled.h1`\n  font-size: 1.8rem;\n  padding: 0;\n  span {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.44);\n    display: inline-block;\n    padding-bottom: ${({ theme }) => theme.scale(3.5)};\n    margin-bottom: -1px;\n  }\n`;\n\nconst TagRoute = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark.edges.map(p => p.node);\n  const { author } = data.site.siteMetadata;\n\n  const allTagsLink = (\n    <FormattedMessage id=\"tags.allTagsLink\">\n      {(txt) => (\n        <BtnLink to={`/tags/`}>\n          {txt}\n        </BtnLink>\n      )}\n    </FormattedMessage>\n  );\n\n  return (\n    <Layout location={location}>\n      <Wrapper>\n        <FormattedMessage id=\"tags\">\n          {(txt) => (\n            <Header>\n              <Helmet\n                title={`${pageContext.tag} | ${txt}`}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                <span>\n                  <FormattedMessage id=\"tags.nPostsTaggedWith\" values={{ nPosts: data.allMarkdownRemark.totalCount }}>\n                    {(txt) => (\n                      `${txt} \"${pageContext.tag}\"`\n                    )}\n                  </FormattedMessage>\n                </span>\n              </H1>\n            </Header>\n          )}\n        </FormattedMessage>\n        <PostCardList\n          posts={posts} author={author}\n        />\n        <footer>\n          {allTagsLink}\n        </footer>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nTagRoute.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n  site {\n    siteMetadata {\n      author {\n        name\n        homeCity\n        email\n        defaultLink\n      }\n    }\n  },\n  allMarkdownRemark(limit: 1000,\n    sort: {fields: [frontmatter___date], order: DESC},\n    filter: {\n      frontmatter: {\n        tags: {in: [$tag]},\n        draft: {ne: true}\n      },\n      fields: {\n        langKey: {eq: $langKey}\n      }\n    }) {\n    totalCount\n    edges {\n      node {\n        frontmatter{\n          title,\n          date,\n          image {\n            childImageSharp{\n                sizes(maxWidth: 750) {\n                    ...GatsbyImageSharpSizes\n                }\n            }\n          }\n        },\n        fields{\n          slug\n          langKey\n        },\n        excerpt\n      }\n    }\n  }\n  }\n`;\n","import styled from 'styled-components';\n\nconst A = styled.a`\n    color: ${props => props.theme.a.color};\n    text-decoration: ${props => props.theme.a.textDecoration};\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover {\n        color: ${props => props.theme.a.hover.color};\n        transition: 0.3s;\n    }\n`;\n\nexport default A;\n","import { Link } from 'gatsby';\nimport A from './A';\n\nexport default A.withComponent(Link);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Time from '../components/Time';\nimport { formatReadingTime } from '../utils/helpers'\n\nconst Wrapper = styled(Grid)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n`;\n\nconst Date = styled.span`\n  color: ${props => props.theme.blog.author.time.color};\n  display: block;\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst FollowButton = styled.a`\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  height: 19px;\n  padding: 0 10px;\n  color: rgba(0,0,0,.84);\n  border: 1px solid rgba(0,0,0,.68);\n  border-radius: 4px;\n  user-select: none!important;\n  margin: 0 14px 4px;\n  span {\n    font-size: 13px;\n    line-height: 19px;\n    padding-bottom: 2px;\n  }\n`;\n\nconst PostAuthor = ({ author, className, date, showFollow, timeToRead }) => {\n  return (\n    <Wrapper columns={'50px 1fr'} className={className}>\n      <Cell middle>\n        <ProfilePicture email={author.email} alt={author.name} width={42} height={42} />\n      </Cell>\n      <Cell middle>\n        <span>\n          {author.name}\n          { showFollow \n            ? <FollowButton href={`http://twitter.com/${author.twitter}`} target=\"_blank\">\n              <span>Follow</span>\n            </FollowButton> \n            : null }\n        </span>\n        <Date>\n          <Time\n            pubdate=\"pubdate\"\n            date={date}\n          />{timeToRead && ` • ${formatReadingTime(timeToRead)}`}\n        </Date>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostAuthor.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  showFollow: PropTypes.bool,\n  timeToRead: PropTypes.number\n};\n\nexport default PostAuthor;\n","export const formatReadingTime = (minutes) => {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './Link';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Img from 'gatsby-image';\nimport Author from './PostAuthor';\nimport { media } from '../constants/responsive';\n\n\nconst GridContainer = styled(Grid)`\n  height: 100%;\n`;\n\nconst Wrapper = styled(GridContainer)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  grid-template-rows: repeat(1,1fr);\n  grid-template-columns: 3fr 5fr;\n  ${media.md`\n    ${props => props.imageOnTop\n    ? ` grid-template-rows: repeat(2,1fr);\n        grid-template-columns: 1fr;`\n    : ''};\n  `}\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  padding: ${({ theme }) => `${theme.scale(-1.5)} ${theme.scale(1.2)} ${theme.scale(0)}`};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n  height: auto;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst Label = styled.div`\n  position: absolute;\n  right: 18px;\n  bottom: 18px;\n`;\n\nconst Image = styled(Img)`\n  height: 100%;\n`;\n\n\nconst PostCard = ({ post, author, imageOnTop }) => {\n  return (\n    <Wrapper imageOnTop={imageOnTop}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Image sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Cell>\n        <GridContainer columns={1} rows={'1fr auto'}>\n          <Body>\n            <Title>\n              <TitleLink to={post.fields.slug}>\n                {post.frontmatter.title}\n              </TitleLink>\n            </Title>\n            <Text>{post.excerpt}</Text>\n          </Body>\n          <Footer>\n            <Author author={author} date={post.frontmatter.date} />\n            <Label>\n              <Link to={post.fields.slug}>\n                <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n              </Link>\n            </Label>\n          </Footer>\n        </GridContainer>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from './PostCard';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst PostCardList = (props) => {\n  return (\n    <nav>\n      <Grid columns=\"repeat(auto-fit,minmax(260px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <PostCard post={post} {...props} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostCardList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCardList;\n"],"sourceRoot":""}